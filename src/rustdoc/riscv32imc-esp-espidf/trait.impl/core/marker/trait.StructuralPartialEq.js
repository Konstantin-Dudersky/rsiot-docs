(function() {var implementors = {
"allocator_api2":[["impl StructuralPartialEq for <a class=\"struct\" href=\"allocator_api2/alloc/struct.AllocError.html\" title=\"struct allocator_api2::alloc::AllocError\">AllocError</a>"]],
"chrono":[["impl StructuralPartialEq for <a class=\"enum\" href=\"chrono/enum.Weekday.html\" title=\"enum chrono::Weekday\">Weekday</a>"],["impl StructuralPartialEq for <a class=\"enum\" href=\"chrono/round/enum.RoundingError.html\" title=\"enum chrono::round::RoundingError\">RoundingError</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"chrono/format/struct.InternalFixed.html\" title=\"struct chrono::format::InternalFixed\">InternalFixed</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"chrono/naive/struct.NaiveDate.html\" title=\"struct chrono::naive::NaiveDate\">NaiveDate</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"chrono/naive/struct.NaiveTime.html\" title=\"struct chrono::naive::NaiveTime\">NaiveTime</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"chrono/naive/struct.NaiveDateDaysIterator.html\" title=\"struct chrono::naive::NaiveDateDaysIterator\">NaiveDateDaysIterator</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"chrono/struct.TimeDelta.html\" title=\"struct chrono::TimeDelta\">TimeDelta</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"chrono/format/struct.ParseError.html\" title=\"struct chrono::format::ParseError\">ParseError</a>"],["impl StructuralPartialEq for <a class=\"enum\" href=\"chrono/format/enum.OffsetPrecision.html\" title=\"enum chrono::format::OffsetPrecision\">OffsetPrecision</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"chrono/offset/struct.FixedOffset.html\" title=\"struct chrono::offset::FixedOffset\">FixedOffset</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"chrono/format/struct.Parsed.html\" title=\"struct chrono::format::Parsed\">Parsed</a>"],["impl StructuralPartialEq for <a class=\"enum\" href=\"chrono/format/enum.Colons.html\" title=\"enum chrono::format::Colons\">Colons</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"chrono/naive/struct.NaiveDateWeeksIterator.html\" title=\"struct chrono::naive::NaiveDateWeeksIterator\">NaiveDateWeeksIterator</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"chrono/struct.OutOfRange.html\" title=\"struct chrono::OutOfRange\">OutOfRange</a>"],["impl StructuralPartialEq for <a class=\"enum\" href=\"chrono/format/enum.Numeric.html\" title=\"enum chrono::format::Numeric\">Numeric</a>"],["impl StructuralPartialEq for <a class=\"enum\" href=\"chrono/format/enum.Pad.html\" title=\"enum chrono::format::Pad\">Pad</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"chrono/naive/struct.IsoWeek.html\" title=\"struct chrono::naive::IsoWeek\">IsoWeek</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"chrono/naive/struct.NaiveDateTime.html\" title=\"struct chrono::naive::NaiveDateTime\">NaiveDateTime</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"chrono/format/struct.OffsetFormat.html\" title=\"struct chrono::format::OffsetFormat\">OffsetFormat</a>"],["impl StructuralPartialEq for <a class=\"enum\" href=\"chrono/format/enum.SecondsFormat.html\" title=\"enum chrono::format::SecondsFormat\">SecondsFormat</a>"],["impl&lt;'a&gt; StructuralPartialEq for <a class=\"enum\" href=\"chrono/format/enum.Item.html\" title=\"enum chrono::format::Item\">Item</a>&lt;'a&gt;"],["impl&lt;T&gt; StructuralPartialEq for <a class=\"enum\" href=\"chrono/offset/enum.LocalResult.html\" title=\"enum chrono::offset::LocalResult\">LocalResult</a>&lt;T&gt;"],["impl StructuralPartialEq for <a class=\"enum\" href=\"chrono/format/enum.Fixed.html\" title=\"enum chrono::format::Fixed\">Fixed</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"chrono/struct.Days.html\" title=\"struct chrono::Days\">Days</a>"],["impl StructuralPartialEq for <a class=\"enum\" href=\"chrono/format/enum.ParseErrorKind.html\" title=\"enum chrono::format::ParseErrorKind\">ParseErrorKind</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"chrono/format/struct.InternalNumeric.html\" title=\"struct chrono::format::InternalNumeric\">InternalNumeric</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"chrono/struct.Months.html\" title=\"struct chrono::Months\">Months</a>"],["impl StructuralPartialEq for <a class=\"enum\" href=\"chrono/enum.Month.html\" title=\"enum chrono::Month\">Month</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"chrono/offset/struct.Utc.html\" title=\"struct chrono::offset::Utc\">Utc</a>"]],
"futures_channel":[["impl&lt;T&gt; StructuralPartialEq for <a class=\"struct\" href=\"futures_channel/mpsc/struct.TrySendError.html\" title=\"struct futures_channel::mpsc::TrySendError\">TrySendError</a>&lt;T&gt;"],["impl StructuralPartialEq for <a class=\"struct\" href=\"futures_channel/oneshot/struct.Canceled.html\" title=\"struct futures_channel::oneshot::Canceled\">Canceled</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"futures_channel/mpsc/struct.SendError.html\" title=\"struct futures_channel::mpsc::SendError\">SendError</a>"]],
"futures_util":[["impl StructuralPartialEq for <a class=\"enum\" href=\"futures_util/stream/enum.PollNext.html\" title=\"enum futures_util::stream::PollNext\">PollNext</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"futures_util/future/struct.Aborted.html\" title=\"struct futures_util::future::Aborted\">Aborted</a>"],["impl&lt;T, E&gt; StructuralPartialEq for <a class=\"struct\" href=\"futures_util/stream/struct.TryReadyChunksError.html\" title=\"struct futures_util::stream::TryReadyChunksError\">TryReadyChunksError</a>&lt;T, E&gt;"],["impl&lt;T&gt; StructuralPartialEq for <a class=\"struct\" href=\"futures_util/io/struct.AllowStdIo.html\" title=\"struct futures_util::io::AllowStdIo\">AllowStdIo</a>&lt;T&gt;"],["impl&lt;T, E&gt; StructuralPartialEq for <a class=\"struct\" href=\"futures_util/stream/struct.TryChunksError.html\" title=\"struct futures_util::stream::TryChunksError\">TryChunksError</a>&lt;T, E&gt;"]],
"getrandom":[["impl StructuralPartialEq for <a class=\"struct\" href=\"getrandom/struct.Error.html\" title=\"struct getrandom::Error\">Error</a>"]],
"hashbrown":[["impl StructuralPartialEq for <a class=\"enum\" href=\"hashbrown/enum.TryReserveError.html\" title=\"enum hashbrown::TryReserveError\">TryReserveError</a>"]],
"indexmap":[["impl StructuralPartialEq for <a class=\"struct\" href=\"indexmap/struct.TryReserveError.html\" title=\"struct indexmap::TryReserveError\">TryReserveError</a>"]],
"libc":[["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.pthread_mutexattr_t.html\" title=\"struct libc::pthread_mutexattr_t\">pthread_mutexattr_t</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.in_addr.html\" title=\"struct libc::in_addr\">in_addr</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.passwd.html\" title=\"struct libc::passwd\">passwd</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.cmsghdr.html\" title=\"struct libc::cmsghdr\">cmsghdr</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.Dl_info.html\" title=\"struct libc::Dl_info\">Dl_info</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.sockaddr_un.html\" title=\"struct libc::sockaddr_un\">sockaddr_un</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.timespec.html\" title=\"struct libc::timespec\">timespec</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.addrinfo.html\" title=\"struct libc::addrinfo\">addrinfo</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.tms.html\" title=\"struct libc::tms\">tms</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.winsize.html\" title=\"struct libc::winsize\">winsize</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.iovec.html\" title=\"struct libc::iovec\">iovec</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.servent.html\" title=\"struct libc::servent\">servent</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.fd_set.html\" title=\"struct libc::fd_set\">fd_set</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.stack_t.html\" title=\"struct libc::stack_t\">stack_t</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.pthread_rwlock_t.html\" title=\"struct libc::pthread_rwlock_t\">pthread_rwlock_t</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.pthread_attr_t.html\" title=\"struct libc::pthread_attr_t\">pthread_attr_t</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.pthread_condattr_t.html\" title=\"struct libc::pthread_condattr_t\">pthread_condattr_t</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.hostent.html\" title=\"struct libc::hostent\">hostent</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.rusage.html\" title=\"struct libc::rusage\">rusage</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.timeval.html\" title=\"struct libc::timeval\">timeval</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.msghdr.html\" title=\"struct libc::msghdr\">msghdr</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.sem_t.html\" title=\"struct libc::sem_t\">sem_t</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.pthread_cond_t.html\" title=\"struct libc::pthread_cond_t\">pthread_cond_t</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.sigset_t.html\" title=\"struct libc::sigset_t\">sigset_t</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.sockaddr_in6.html\" title=\"struct libc::sockaddr_in6\">sockaddr_in6</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.statvfs.html\" title=\"struct libc::statvfs\">statvfs</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.pthread_rwlockattr_t.html\" title=\"struct libc::pthread_rwlockattr_t\">pthread_rwlockattr_t</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.sockaddr_storage.html\" title=\"struct libc::sockaddr_storage\">sockaddr_storage</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.linger.html\" title=\"struct libc::linger\">linger</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.termios.html\" title=\"struct libc::termios\">termios</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.in6_addr.html\" title=\"struct libc::in6_addr\">in6_addr</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.utsname.html\" title=\"struct libc::utsname\">utsname</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.sigaction.html\" title=\"struct libc::sigaction\">sigaction</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.ip_mreq.html\" title=\"struct libc::ip_mreq\">ip_mreq</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.itimerval.html\" title=\"struct libc::itimerval\">itimerval</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.group.html\" title=\"struct libc::group\">group</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.rlimit.html\" title=\"struct libc::rlimit\">rlimit</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.dirent.html\" title=\"struct libc::dirent\">dirent</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.lconv.html\" title=\"struct libc::lconv\">lconv</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.ipv6_mreq.html\" title=\"struct libc::ipv6_mreq\">ipv6_mreq</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.stat.html\" title=\"struct libc::stat\">stat</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.sockaddr_in.html\" title=\"struct libc::sockaddr_in\">sockaddr_in</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.tm.html\" title=\"struct libc::tm\">tm</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.cpu_set_t.html\" title=\"struct libc::cpu_set_t\">cpu_set_t</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.protoent.html\" title=\"struct libc::protoent\">protoent</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.pthread_mutex_t.html\" title=\"struct libc::pthread_mutex_t\">pthread_mutex_t</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.utimbuf.html\" title=\"struct libc::utimbuf\">utimbuf</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.pollfd.html\" title=\"struct libc::pollfd\">pollfd</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.sigval.html\" title=\"struct libc::sigval\">sigval</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"libc/struct.sockaddr.html\" title=\"struct libc::sockaddr\">sockaddr</a>"]],
"log":[["impl StructuralPartialEq for <a class=\"enum\" href=\"log/enum.Level.html\" title=\"enum log::Level\">Level</a>"],["impl StructuralPartialEq for <a class=\"enum\" href=\"log/enum.LevelFilter.html\" title=\"enum log::LevelFilter\">LevelFilter</a>"],["impl&lt;'a&gt; StructuralPartialEq for <a class=\"struct\" href=\"log/struct.MetadataBuilder.html\" title=\"struct log::MetadataBuilder\">MetadataBuilder</a>&lt;'a&gt;"],["impl StructuralPartialEq for <a class=\"struct\" href=\"log/struct.ParseLevelError.html\" title=\"struct log::ParseLevelError\">ParseLevelError</a>"],["impl&lt;'a&gt; StructuralPartialEq for <a class=\"struct\" href=\"log/struct.Metadata.html\" title=\"struct log::Metadata\">Metadata</a>&lt;'a&gt;"]],
"rsiot":[["impl StructuralPartialEq for <a class=\"struct\" href=\"rsiot/message/timestamp/struct.Timestamp.html\" title=\"struct rsiot::message::timestamp::Timestamp\">Timestamp</a>"],["impl StructuralPartialEq for <a class=\"enum\" href=\"rsiot/message/example_message/enum.Custom.html\" title=\"enum rsiot::message::example_message::Custom\">Custom</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"rsiot/message/system_messages/ping_pong/struct.Ping.html\" title=\"struct rsiot::message::system_messages::ping_pong::Ping\">Ping</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"rsiot/message/system_messages/auth_request_by_login/struct.AuthRequestByLogin.html\" title=\"struct rsiot::message::system_messages::auth_request_by_login::AuthRequestByLogin\">AuthRequestByLogin</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"rsiot/message/msg_trace/struct.MsgTraceItem.html\" title=\"struct rsiot::message::msg_trace::MsgTraceItem\">MsgTraceItem</a>"],["impl StructuralPartialEq for <a class=\"enum\" href=\"rsiot/message/example_message/enum.DataGroup.html\" title=\"enum rsiot::message::example_message::DataGroup\">DataGroup</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"rsiot/message/example_message/struct.StructInDataGroup.html\" title=\"struct rsiot::message::example_message::StructInDataGroup\">StructInDataGroup</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"rsiot/message/msg_trace/struct.MsgTrace.html\" title=\"struct rsiot::message::msg_trace::MsgTrace\">MsgTrace</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"rsiot/message/system_messages/auth_response_ok/struct.AuthResponseOk.html\" title=\"struct rsiot::message::system_messages::auth_response_ok::AuthResponseOk\">AuthResponseOk</a>"],["impl&lt;TCustom&gt; StructuralPartialEq for <a class=\"struct\" href=\"rsiot/message/message/struct.Message.html\" title=\"struct rsiot::message::message::Message\">Message</a>&lt;TCustom&gt;"],["impl&lt;TCustom&gt; StructuralPartialEq for <a class=\"enum\" href=\"rsiot/message/msg_data/enum.MsgData.html\" title=\"enum rsiot::message::msg_data::MsgData\">MsgData</a>&lt;TCustom&gt;"],["impl StructuralPartialEq for <a class=\"struct\" href=\"rsiot/message/system_messages/auth_request_by_token/struct.AuthRequestByToken.html\" title=\"struct rsiot::message::system_messages::auth_request_by_token::AuthRequestByToken\">AuthRequestByToken</a>"],["impl StructuralPartialEq for <a class=\"enum\" href=\"rsiot/message/auth_roles/enum.AuthPermissions.html\" title=\"enum rsiot::message::auth_roles::AuthPermissions\">AuthPermissions</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"rsiot/message/system_messages/ping_pong/struct.Pong.html\" title=\"struct rsiot::message::system_messages::ping_pong::Pong\">Pong</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"rsiot/message/system_messages/auth_response_error/struct.AuthResponseErr.html\" title=\"struct rsiot::message::system_messages::auth_response_error::AuthResponseErr\">AuthResponseErr</a>"],["impl StructuralPartialEq for <a class=\"enum\" href=\"rsiot/message/system_messages/enum.System.html\" title=\"enum rsiot::message::system_messages::System\">System</a>"]],
"serde":[["impl StructuralPartialEq for <a class=\"struct\" href=\"serde/de/value/struct.Error.html\" title=\"struct serde::de::value::Error\">Error</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"serde/de/struct.IgnoredAny.html\" title=\"struct serde::de::IgnoredAny\">IgnoredAny</a>"],["impl&lt;'a&gt; StructuralPartialEq for <a class=\"enum\" href=\"serde/de/enum.Unexpected.html\" title=\"enum serde::de::Unexpected\">Unexpected</a>&lt;'a&gt;"]],
"serde_json":[["impl StructuralPartialEq for <a class=\"struct\" href=\"serde_json/value/struct.Number.html\" title=\"struct serde_json::value::Number\">Number</a>"],["impl StructuralPartialEq for <a class=\"enum\" href=\"serde_json/error/enum.Category.html\" title=\"enum serde_json::error::Category\">Category</a>"],["impl StructuralPartialEq for <a class=\"enum\" href=\"serde_json/enum.Value.html\" title=\"enum serde_json::Value\">Value</a>"]],
"tracing_core":[["impl StructuralPartialEq for <a class=\"struct\" href=\"tracing_core/struct.LevelFilter.html\" title=\"struct tracing_core::LevelFilter\">LevelFilter</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"tracing_core/span/struct.Id.html\" title=\"struct tracing_core::span::Id\">Id</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"tracing_core/field/struct.Empty.html\" title=\"struct tracing_core::field::Empty\">Empty</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"tracing_core/metadata/struct.Kind.html\" title=\"struct tracing_core::metadata::Kind\">Kind</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"tracing_core/struct.Level.html\" title=\"struct tracing_core::Level\">Level</a>"]],
"typenum":[["impl StructuralPartialEq for <a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"typenum/array/struct.ATerm.html\" title=\"struct typenum::array::ATerm\">ATerm</a>"],["impl&lt;U, B&gt; StructuralPartialEq for <a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;U, B&gt;"],["impl StructuralPartialEq for <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>"],["impl&lt;V, A&gt; StructuralPartialEq for <a class=\"struct\" href=\"typenum/array/struct.TArr.html\" title=\"struct typenum::array::TArr\">TArr</a>&lt;V, A&gt;"],["impl StructuralPartialEq for <a class=\"struct\" href=\"typenum/struct.Greater.html\" title=\"struct typenum::Greater\">Greater</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"typenum/struct.Less.html\" title=\"struct typenum::Less\">Less</a>"],["impl&lt;U: <a class=\"trait\" href=\"typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a> + <a class=\"trait\" href=\"typenum/marker_traits/trait.NonZero.html\" title=\"trait typenum::marker_traits::NonZero\">NonZero</a>&gt; StructuralPartialEq for <a class=\"struct\" href=\"typenum/int/struct.PInt.html\" title=\"struct typenum::int::PInt\">PInt</a>&lt;U&gt;"],["impl&lt;U: <a class=\"trait\" href=\"typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\">Unsigned</a> + <a class=\"trait\" href=\"typenum/marker_traits/trait.NonZero.html\" title=\"trait typenum::marker_traits::NonZero\">NonZero</a>&gt; StructuralPartialEq for <a class=\"struct\" href=\"typenum/int/struct.NInt.html\" title=\"struct typenum::int::NInt\">NInt</a>&lt;U&gt;"],["impl StructuralPartialEq for <a class=\"struct\" href=\"typenum/struct.Equal.html\" title=\"struct typenum::Equal\">Equal</a>"]],
"uuid":[["impl StructuralPartialEq for <a class=\"struct\" href=\"uuid/fmt/struct.Simple.html\" title=\"struct uuid::fmt::Simple\">Simple</a>"],["impl StructuralPartialEq for <a class=\"enum\" href=\"uuid/enum.Variant.html\" title=\"enum uuid::Variant\">Variant</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"uuid/fmt/struct.Urn.html\" title=\"struct uuid::fmt::Urn\">Urn</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"uuid/fmt/struct.Braced.html\" title=\"struct uuid::fmt::Braced\">Braced</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"uuid/timestamp/struct.Timestamp.html\" title=\"struct uuid::timestamp::Timestamp\">Timestamp</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"uuid/fmt/struct.Hyphenated.html\" title=\"struct uuid::fmt::Hyphenated\">Hyphenated</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"uuid/struct.Error.html\" title=\"struct uuid::Error\">Error</a>"],["impl StructuralPartialEq for <a class=\"struct\" href=\"uuid/struct.Uuid.html\" title=\"struct uuid::Uuid\">Uuid</a>"],["impl StructuralPartialEq for <a class=\"enum\" href=\"uuid/enum.Version.html\" title=\"enum uuid::Version\">Version</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()