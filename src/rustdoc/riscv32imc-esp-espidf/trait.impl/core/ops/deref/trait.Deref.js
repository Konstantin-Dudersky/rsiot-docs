(function() {var implementors = {
"ahash":[["impl&lt;T, S&gt; Deref for <a class=\"struct\" href=\"ahash/struct.AHashSet.html\" title=\"struct ahash::AHashSet\">AHashSet</a>&lt;T, S&gt;"],["impl&lt;K, V, S&gt; Deref for <a class=\"struct\" href=\"ahash/struct.AHashMap.html\" title=\"struct ahash::AHashMap\">AHashMap</a>&lt;K, V, S&gt;"]],
"allocator_api2":[["impl&lt;T: ?Sized, A: <a class=\"trait\" href=\"allocator_api2/alloc/trait.Allocator.html\" title=\"trait allocator_api2::alloc::Allocator\">Allocator</a>&gt; Deref for <a class=\"struct\" href=\"allocator_api2/boxed/struct.Box.html\" title=\"struct allocator_api2::boxed::Box\">Box</a>&lt;T, A&gt;"],["impl&lt;T, A: <a class=\"trait\" href=\"allocator_api2/alloc/trait.Allocator.html\" title=\"trait allocator_api2::alloc::Allocator\">Allocator</a>&gt; Deref for <a class=\"struct\" href=\"allocator_api2/vec/struct.Vec.html\" title=\"struct allocator_api2::vec::Vec\">Vec</a>&lt;T, A&gt;"]],
"anyhow":[["impl Deref for <a class=\"struct\" href=\"anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>"]],
"bytes":[["impl Deref for <a class=\"struct\" href=\"bytes/struct.Bytes.html\" title=\"struct bytes::Bytes\">Bytes</a>"],["impl Deref for <a class=\"struct\" href=\"bytes/struct.BytesMut.html\" title=\"struct bytes::BytesMut\">BytesMut</a>"]],
"futures_task":[["impl Deref for <a class=\"struct\" href=\"futures_task/struct.WakerRef.html\" title=\"struct futures_task::WakerRef\">WakerRef</a>&lt;'_&gt;"]],
"futures_util":[["impl&lt;T: ?Sized&gt; Deref for <a class=\"struct\" href=\"futures_util/lock/struct.MutexGuard.html\" title=\"struct futures_util::lock::MutexGuard\">MutexGuard</a>&lt;'_, T&gt;"],["impl&lt;T: ?Sized, U: ?Sized&gt; Deref for <a class=\"struct\" href=\"futures_util/lock/struct.MappedMutexGuard.html\" title=\"struct futures_util::lock::MappedMutexGuard\">MappedMutexGuard</a>&lt;'_, T, U&gt;"],["impl&lt;T: ?Sized&gt; Deref for <a class=\"struct\" href=\"futures_util/lock/struct.OwnedMutexGuard.html\" title=\"struct futures_util::lock::OwnedMutexGuard\">OwnedMutexGuard</a>&lt;T&gt;"]],
"once_cell":[["impl&lt;T, F: FnOnce() -&gt; T&gt; Deref for <a class=\"struct\" href=\"once_cell/unsync/struct.Lazy.html\" title=\"struct once_cell::unsync::Lazy\">Lazy</a>&lt;T, F&gt;"],["impl&lt;T, F: FnOnce() -&gt; T&gt; Deref for <a class=\"struct\" href=\"once_cell/sync/struct.Lazy.html\" title=\"struct once_cell::sync::Lazy\">Lazy</a>&lt;T, F&gt;"]],
"smallvec":[["impl&lt;A: <a class=\"trait\" href=\"smallvec/trait.Array.html\" title=\"trait smallvec::Array\">Array</a>&gt; Deref for <a class=\"struct\" href=\"smallvec/struct.SmallVec.html\" title=\"struct smallvec::SmallVec\">SmallVec</a>&lt;A&gt;"]],
"tracing":[["impl Deref for <a class=\"struct\" href=\"tracing/span/struct.EnteredSpan.html\" title=\"struct tracing::span::EnteredSpan\">EnteredSpan</a>"]],
"zerocopy":[["impl&lt;B, T&gt; Deref for <a class=\"struct\" href=\"zerocopy/struct.Ref.html\" title=\"struct zerocopy::Ref\">Ref</a>&lt;B, T&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"zerocopy/trait.ByteSlice.html\" title=\"trait zerocopy::ByteSlice\">ByteSlice</a>,\n    T: <a class=\"trait\" href=\"zerocopy/trait.FromBytes.html\" title=\"trait zerocopy::FromBytes\">FromBytes</a>,</div>"],["impl&lt;T: <a class=\"trait\" href=\"zerocopy/trait.Unaligned.html\" title=\"trait zerocopy::Unaligned\">Unaligned</a>&gt; Deref for <a class=\"struct\" href=\"zerocopy/struct.Unalign.html\" title=\"struct zerocopy::Unalign\">Unalign</a>&lt;T&gt;"],["impl&lt;B, T&gt; Deref for <a class=\"struct\" href=\"zerocopy/struct.Ref.html\" title=\"struct zerocopy::Ref\">Ref</a>&lt;B, [T]&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"zerocopy/trait.ByteSlice.html\" title=\"trait zerocopy::ByteSlice\">ByteSlice</a>,\n    T: <a class=\"trait\" href=\"zerocopy/trait.FromBytes.html\" title=\"trait zerocopy::FromBytes\">FromBytes</a>,</div>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()