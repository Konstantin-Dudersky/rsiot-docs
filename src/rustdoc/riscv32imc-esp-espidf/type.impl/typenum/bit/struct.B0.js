(function() {var type_impls = {
"typenum":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-B0\" class=\"impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#22-28\">source</a><a href=\"#impl-B0\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#25-27\">source</a><h4 class=\"code-header\">pub fn <a href=\"typenum/bit/struct.B0.html#tymethod.new\" class=\"fn\">new</a>() -&gt; <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h4></section></summary><div class=\"docblock\"><p>Instantiates a singleton representing this bit.</p>\n</div></details></div></details>",0,"typenum::generated::consts::False"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Min-for-B0\" class=\"impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#261-267\">source</a><a href=\"#impl-Min-for-B0\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"typenum/type_operators/trait.Min.html\" title=\"trait typenum::type_operators::Min\">Min</a> for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"typenum/type_operators/trait.Min.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h4></section></summary><div class='docblock'>The type of the minimum of <code>Self</code> and <code>Rhs</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#264-266\">source</a><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"typenum/type_operators/trait.Min.html#tymethod.min\" class=\"fn\">min</a>(self, _: <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>) -&gt; <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h4></section></summary><div class='docblock'>Method returning the minimum</div></details></div></details>","Min","typenum::generated::consts::False"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CB1%3E-for-B0\" class=\"impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#137-143\">source</a><a href=\"#impl-BitOr%3CB1%3E-for-B0\" class=\"anchor\">§</a><h3 class=\"code-header\">impl BitOr&lt;<a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt; for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h3></section></summary><div class=\"docblock\"><p>Or with 0 ( 0 | 1 = 1)</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#140-142\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">bitor</a>(self, _: <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>) -&gt; Self::Output</h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a>Read more</a></div></details></div></details>","BitOr<B1>","typenum::generated::consts::False"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-B0\" class=\"impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#18\">source</a><a href=\"#impl-Debug-for-B0\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Debug for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#18\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">fmt</a>(&amp;self, f: &amp;mut Formatter&lt;'_&gt;) -&gt; Result</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a>Read more</a></div></details></div></details>","Debug","typenum::generated::consts::False"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Max%3CB1%3E-for-B0\" class=\"impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#298-304\">source</a><a href=\"#impl-Max%3CB1%3E-for-B0\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"typenum/type_operators/trait.Max.html\" title=\"trait typenum::type_operators::Max\">Max</a>&lt;<a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt; for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"typenum/type_operators/trait.Max.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a></h4></section></summary><div class='docblock'>The type of the maximum of <code>Self</code> and <code>Rhs</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#301-303\">source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"typenum/type_operators/trait.Max.html#tymethod.max\" class=\"fn\">max</a>(self, rhs: <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>) -&gt; <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a></h4></section></summary><div class='docblock'>Method returning the maximum</div></details></div></details>","Max<B1>","typenum::generated::consts::False"],["<section id=\"impl-Eq-for-B0\" class=\"impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#18\">source</a><a href=\"#impl-Eq-for-B0\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Eq for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h3></section>","Eq","typenum::generated::consts::False"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Bit-for-B0\" class=\"impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#43-59\">source</a><a href=\"#impl-Bit-for-B0\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"typenum/marker_traits/trait.Bit.html\" title=\"trait typenum::marker_traits::Bit\">Bit</a> for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedconstant.U8\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#44\">source</a><a href=\"#associatedconstant.U8\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"typenum/marker_traits/trait.Bit.html#associatedconstant.U8\" class=\"constant\">U8</a>: u8 = 0u8</h4></section><section id=\"associatedconstant.BOOL\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#45\">source</a><a href=\"#associatedconstant.BOOL\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"typenum/marker_traits/trait.Bit.html#associatedconstant.BOOL\" class=\"constant\">BOOL</a>: bool = false</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#48-50\">source</a><a href=\"#method.new\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"typenum/marker_traits/trait.Bit.html#tymethod.new\" class=\"fn\">new</a>() -&gt; Self</h4></section></summary><div class='docblock'>Instantiates a singleton representing this bit.</div></details><section id=\"method.to_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#52-54\">source</a><a href=\"#method.to_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"typenum/marker_traits/trait.Bit.html#tymethod.to_u8\" class=\"fn\">to_u8</a>() -&gt; u8</h4></section><section id=\"method.to_bool\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#56-58\">source</a><a href=\"#method.to_bool\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"typenum/marker_traits/trait.Bit.html#tymethod.to_bool\" class=\"fn\">to_bool</a>() -&gt; bool</h4></section></div></details>","Bit","typenum::generated::consts::False"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3CB1%3E-for-B0\" class=\"impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#171-177\">source</a><a href=\"#impl-BitXor%3CB1%3E-for-B0\" class=\"anchor\">§</a><h3 class=\"code-header\">impl BitXor&lt;<a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt; for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h3></section></summary><div class=\"docblock\"><p>Xor between 0 and 1 ( 0 ^ 1 = 1)</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#174-176\">source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">bitxor</a>(self, _: <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>) -&gt; Self::Output</h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a>Read more</a></div></details></div></details>","BitXor<B1>","typenum::generated::consts::False"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cmp-for-B0\" class=\"impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#224-231\">source</a><a href=\"#impl-Cmp-for-B0\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"typenum/type_operators/trait.Cmp.html\" title=\"trait typenum::type_operators::Cmp\">Cmp</a> for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"typenum/type_operators/trait.Cmp.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"typenum/struct.Equal.html\" title=\"struct typenum::Equal\">Equal</a></h4></section></summary><div class='docblock'>The result of the comparison. It should only ever be one of <code>Greater</code>, <code>Less</code>, or <code>Equal</code>.</div></details></div></details>","Cmp","typenum::generated::consts::False"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cmp%3CB1%3E-for-B0\" class=\"impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#233-240\">source</a><a href=\"#impl-Cmp%3CB1%3E-for-B0\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"typenum/type_operators/trait.Cmp.html\" title=\"trait typenum::type_operators::Cmp\">Cmp</a>&lt;<a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt; for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"typenum/type_operators/trait.Cmp.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"typenum/struct.Less.html\" title=\"struct typenum::Less\">Less</a></h4></section></summary><div class='docblock'>The result of the comparison. It should only ever be one of <code>Greater</code>, <code>Less</code>, or <code>Equal</code>.</div></details></div></details>","Cmp<B1>","typenum::generated::consts::False"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Min%3CB1%3E-for-B0\" class=\"impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#268-274\">source</a><a href=\"#impl-Min%3CB1%3E-for-B0\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"typenum/type_operators/trait.Min.html\" title=\"trait typenum::type_operators::Min\">Min</a>&lt;<a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt; for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"typenum/type_operators/trait.Min.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h4></section></summary><div class='docblock'>The type of the minimum of <code>Self</code> and <code>Rhs</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#271-273\">source</a><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"typenum/type_operators/trait.Min.html#tymethod.min\" class=\"fn\">min</a>(self, _: <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>) -&gt; <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h4></section></summary><div class='docblock'>Method returning the minimum</div></details></div></details>","Min<B1>","typenum::generated::consts::False"],["<section id=\"impl-Zero-for-B0\" class=\"impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#79\">source</a><a href=\"#impl-Zero-for-B0\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"typenum/marker_traits/trait.Zero.html\" title=\"trait typenum::marker_traits::Zero\">Zero</a> for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h3></section>","Zero","typenum::generated::consts::False"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-B0\" class=\"impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#128-134\">source</a><a href=\"#impl-BitOr-for-B0\" class=\"anchor\">§</a><h3 class=\"code-header\">impl BitOr for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h3></section></summary><div class=\"docblock\"><p>Or with 0 ( 0 | 0 = 0)</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#131-133\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">bitor</a>(self, _: <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>) -&gt; Self::Output</h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a>Read more</a></div></details></div></details>","BitOr","typenum::generated::consts::False"],["<section id=\"impl-StructuralPartialEq-for-B0\" class=\"impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#18\">source</a><a href=\"#impl-StructuralPartialEq-for-B0\" class=\"anchor\">§</a><h3 class=\"code-header\">impl StructuralPartialEq for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h3></section>","StructuralPartialEq","typenum::generated::consts::False"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-B0\" class=\"impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#18\">source</a><a href=\"#impl-PartialEq-for-B0\" class=\"anchor\">§</a><h3 class=\"code-header\">impl PartialEq for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#18\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>) -&gt; bool</h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ne</a>(&amp;self, other: &amp;Rhs) -&gt; bool</h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","typenum::generated::consts::False"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-B0\" class=\"impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#155-161\">source</a><a href=\"#impl-BitXor-for-B0\" class=\"anchor\">§</a><h3 class=\"code-header\">impl BitXor for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h3></section></summary><div class=\"docblock\"><p>Xor between 0 and 0 ( 0 ^ 0 = 0)</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#158-160\">source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">bitxor</a>(self, _: <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>) -&gt; Self::Output</h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a>Read more</a></div></details></div></details>","BitXor","typenum::generated::consts::False"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-B0\" class=\"impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#18\">source</a><a href=\"#impl-Ord-for-B0\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Ord for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#18\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>) -&gt; Ordering</h4></section></summary><div class='docblock'>This method returns an [<code>Ordering</code>] between <code>self</code> and <code>other</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.21.0\">1.21.0</span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: Sized,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.21.0\">1.21.0</span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: Sized,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.50.0\">1.50.0</span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: Sized + PartialOrd,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a>Read more</a></div></details></div></details>","Ord","typenum::generated::consts::False"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CRhs%3E-for-B0\" class=\"impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#101-107\">source</a><a href=\"#impl-BitAnd%3CRhs%3E-for-B0\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Rhs: <a class=\"trait\" href=\"typenum/marker_traits/trait.Bit.html\" title=\"trait typenum::marker_traits::Bit\">Bit</a>&gt; BitAnd&lt;Rhs&gt; for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h3></section></summary><div class=\"docblock\"><p>And with 0 ( 0 &amp; B = 0)</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#104-106\">source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">bitand</a>(self, _: Rhs) -&gt; Self::Output</h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a>Read more</a></div></details></div></details>","BitAnd<Rhs>","typenum::generated::consts::False"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Max-for-B0\" class=\"impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#291-297\">source</a><a href=\"#impl-Max-for-B0\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"typenum/type_operators/trait.Max.html\" title=\"trait typenum::type_operators::Max\">Max</a> for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"typenum/type_operators/trait.Max.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h4></section></summary><div class='docblock'>The type of the maximum of <code>Self</code> and <code>Rhs</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#294-296\">source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"typenum/type_operators/trait.Max.html#tymethod.max\" class=\"fn\">max</a>(self, _: <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>) -&gt; <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h4></section></summary><div class='docblock'>Method returning the maximum</div></details></div></details>","Max","typenum::generated::consts::False"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-B0\" class=\"impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#18\">source</a><a href=\"#impl-PartialOrd-for-B0\" class=\"anchor\">§</a><h3 class=\"code-header\">impl PartialOrd for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#18\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>) -&gt; Option&lt;Ordering&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">lt</a>(&amp;self, other: &amp;Rhs) -&gt; bool</h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">le</a>(&amp;self, other: &amp;Rhs) -&gt; bool</h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">gt</a>(&amp;self, other: &amp;Rhs) -&gt; bool</h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ge</a>(&amp;self, other: &amp;Rhs) -&gt; bool</h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a>Read more</a></div></details></div></details>","PartialOrd","typenum::generated::consts::False"],["<section id=\"impl-Copy-for-B0\" class=\"impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#18\">source</a><a href=\"#impl-Copy-for-B0\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Copy for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h3></section>","Copy","typenum::generated::consts::False"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-B0\" class=\"impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#18\">source</a><a href=\"#impl-Default-for-B0\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Default for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#18\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a>Read more</a></div></details></div></details>","Default","typenum::generated::consts::False"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-B0\" class=\"impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#18\">source</a><a href=\"#impl-Clone-for-B0\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Clone for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#18\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a>Read more</a></div></details></div></details>","Clone","typenum::generated::consts::False"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Not-for-B0\" class=\"impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#84-90\">source</a><a href=\"#impl-Not-for-B0\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Not for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h3></section></summary><div class=\"docblock\"><p>Not of 0 (!0 = 1)</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>!</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#87-89\">source</a><a href=\"#method.not\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">not</a>(self) -&gt; Self::Output</h4></section></summary><div class='docblock'>Performs the unary <code>!</code> operation. <a>Read more</a></div></details></div></details>","Not","typenum::generated::consts::False"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-B0\" class=\"impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#18\">source</a><a href=\"#impl-Hash-for-B0\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Hash for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/typenum/bit.rs.html#18\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash</a>&lt;__H: Hasher&gt;(&amp;self, state: &amp;mut __H)</h4></section></summary><div class='docblock'>Feeds this value into the given [<code>Hasher</code>]. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.3.0\">1.3.0</span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: &amp;mut H)<div class=\"where\">where\n    H: Hasher,\n    Self: Sized,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given [<code>Hasher</code>]. <a>Read more</a></div></details></div></details>","Hash","typenum::generated::consts::False"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()