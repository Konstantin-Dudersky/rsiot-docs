searchState.loadedDescShard("rsiot", 0, "Компоненты для построения …\nКомпоненты\nСтруктуры для конфигурации …\nИсполнитель - структура для …\nНастройки логгирования для …\nПредставление сообщений в …\nШаблон компонента\nКомпонент для добавления …\nКомпонент для отправки …\nКомпонент для создания …\nКомпонент для чтения …\nКомпонент для работы с входами …\nКлиент MQTT микроконтроллера ESP32\nКомпонент для сохранения / …\nШаблон компонента\nТестирование документации:\nHTTP-сервер в микроконтроллере ESP32\nКомпонент для периодического …\nКомпонент для логгирования …\nИсполнение логики работы в …\nContains the error value\nContains the success value\nКомпонент CMP_TEMPLATE\nПример\nПример\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nНастройки\nКомпонент cmp_add_input_stream\nВнешний канал broadcast, на который …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nНастройки\nКомпонент cmp_add_output_stream\nВнешний канал mpsc, в который …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nКомпонент cmp_derive\nНастройки cmp_derive\nХранение данных для …\nТрейт для запуска …\nContains the error value\nОшибки cmp_derive\nContains the success value\nTokioSynBroadcast\nTokioTaskJoin\nВектор структур <code>DeriveItem</code>\nОбработка входящих сообщений и …\nФормирование исходящих …\nФункция преобразования\nСтруктура для сохранения …\nКомпонент cmp_derive\nНастройки cmp_derive\nВектор структур <code>DeriveItem</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nХранение данных для …\nОбработка входящих сообщений и …\nФормирование исходящих …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nСтруктура для сохранения …\nТрейт для запуска …\nФункция преобразования\nОшибки cmp_derive\nTokioSynBroadcast\nTokioTaskJoin\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nКомпонент cmp_esp_adc\nКонфигурация cmp_esp_adc\nНастройка\nКоэффициент усиления\nПин подключения\nContains the error value\nОшибки cmp_esp_adc\nContains the success value\nСсылка на ADC1\nСсылка на ADC2\nКоэфициент усиления\nФункция преобразования …\nКонфигурация входов\nПин подключения\nПериод обновления значения\nКомпонент cmp_esp_adc\nКонфигурация cmp_esp_adc\nНастройка\nКоэффициент усиления\nПин подключения\nСсылка на ADC1\nСсылка на ADC2\nКоэфициент усиления\nФункция преобразования …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nКонфигурация входов\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nПин подключения\nПериод обновления значения\nОшибки cmp_esp_adc\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nКомпонент cmp_esp_wifi\n…\nКонфигурация одного входа\nКонфигурация одного выхода\nContains the error value\nОшибки cmp_esp_gpio\nContains the success value\nФункция преобразования …\nФункция преобразования …\n…\nПодается ли напряжения в …\n…\nПин\nПин\nКомпонент cmp_esp_wifi\n…\nКонфигурация одного входа\nКонфигурация одного выхода\nФункция преобразования …\nФункция преобразования …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\n…\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nПодается ли напряжения в …\n…\nПин\nПин\nОшибки cmp_esp_gpio\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nФункция чтения одного входа\nКомпонент cmp_esp_mqtt_client\nКонфигурация cmp_mqtt_client\nContains the error value\nContains the success value\nИдентификатор клиента MQTT\nФункция преобразования …\nФункция преобразования данных, …\nReturns the argument unchanged.\nАдрес брокера\nCalls <code>U::from(self)</code>.\nПорт брокера.\nКомпонент cmp_esp_mqtt_client\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nКомпонент cmp_storage_esp\nКонфигурация cmp_storage_esp\nТестирование документации:\nФункция для сохранения …\nФункция для выдачи сообщений из …\nКомпонент cmp_storage_esp\nКонфигурация cmp_storage_esp\nФункция для сохранения …\nФункция для выдачи сообщений из …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nContains the error value\nContains the success value\nКомпонент cmp_esp_wifi\nКонфигурация cmp_esp_wifi\nНастройка WiFi как точки доступа\nНастройка WiFi как клиента\nContains the error value\nОшибки cmp_esp_wifi\nContains the success value\nНастройка WiFi как точки доступа\nЗащита сети\nНастройка WiFi как клиента\nСсылка на цикл событий\nReturns the argument unchanged.\nTry to create Self from the raw representation\nCalls <code>U::from(self)</code>.\nПароль точки доступа\nМодем для подключения\nНазвание точки доступа\nНазвание точки доступа\nКомпонент cmp_esp_wifi\nКонфигурация cmp_esp_wifi\nНастройка WiFi как точки доступа\nНастройка WiFi как клиента\nНастройка WiFi как точки доступа\nЗащита сети\nНастройка WiFi как клиента\nСсылка на цикл событий\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nПароль точки доступа\nМодем для подключения\nНазвание точки доступа\nНазвание точки доступа\nОшибки cmp_esp_wifi\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nЗапустить Wi-Fi в комбинированном …\nКомпонент cmp_external_fn_process\nНастройки cmp_external_fn_process\nВнешняя функция для выполнения\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nКомпонент cmp_http_server_esp\nКонфигурация компонента http-server\nContains the error value\nОшибки cmp_http_server_esp\nContains the success value\nФункция преобразования …\nФункция преобразования текста …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nПорт, через который доступен …\nКомпонент cmp_http_server_esp\nОшибки cmp_http_server_esp\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nЗаголовки для разрешения CORS\nКомпонент cmp_inject_periodic\nКонфигурация cmp_inject_periodic\nФункция для генерирования …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nПериод вызова\nКомпонент cmp_logger\nНастройки компонента …\nФункция преобразования …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nУровень логгирования\nКомпонент cmp_plc\nCmpOutput\nКонфигурация компонента ПЛК\nContains the error value\nОшибки cmp_plc\nContains the success value\nTokioTaskJoin\nГлавный функциональный блок ПЛК\nФункция инициализации входной …\nФункция преобразования …\nФункция преобразования …\nПериодичность выполнения …\nМодули, связанные с работой plc\nШаблон для нового …\nКомпонент cmp_plc\nКонфигурация компонента ПЛК\nГлавный функциональный блок ПЛК\nФункция инициализации входной …\nФункция преобразования …\nФункция преобразования …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nПериодичность выполнения …\nCmpOutput\nОшибки cmp_plc\nTokioTaskJoin\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nИсполнение одного цикла ПЛК\nИсполнение логики ПЛК в цикле\nСохранение входящих сообщений …\nФункциональный блок\nБиблиотека функциональных …\nТипы данных в ПЛК\nФункциональный блок\nТрейт для логики выполнения …\nВызов функционального блока\nReturns the argument unchanged.\nВходные данные\nCalls <code>U::from(self)</code>.\nОсновная логика выполнения …\nСоздание экземпляря …\nВыходные данные\nСтатичные данные - сохраняются …\nОпределение фронта сигнала\nТаймеры\nФронт сигнала 0 -&gt; 1\nФронт сигнала 0 -&gt; 1\nВходные данные\nВыходные данные\nСтатичные данные\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nСигнал, фронт которого нужно …\nВходные данные\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nВыходные данные\nУстанавливается в true на один …\nСтатичные данные - сохраняются …\nТаймер TON\nТаймер TON\nВходные данные\nВыходные данные\nСтатичные данные\nВремя работы таймера\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nВходные данные\nВходной сигнал для контроля\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nВыходные данные\nУстанавливается в true, когда …\nЗадание времени\nСтатичные данные - сохраняются …\nПромежуток времени\nМетка времени\nМетка времени\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nВходные данные\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nВыходные данные\nСтатичные данные - сохраняются …\nКонфигурация HTTP-сервера\nКонфигурация компонента http-server\nФункция преобразования …\nФункция преобразования текста …\nПорт, через который доступен …\nКонфигурация cmp_mqtt_client\nИдентификатор клиента MQTT\nФункция преобразования …\nФункция преобразования данных, …\nАдрес брокера\nПорт брокера.\nКеширование сообщений\nПодключение компонента к …\nComponent input error\nComponent output error\nТип возвращаемого значения …\nПредставление обобщенного …\nОшибки исполненителя …\nЗапуск коллекции компонентов в …\nНастройка исполнителя\nContains the error value\nComponent execution error\nТрейт основной функции …\nComponent initialization error\nContains the success value\nРазмер буфера канала сообщения\nСсылка на кэш TODO - проверить, …\nНазвание исполнителя\nФункция фильтрации сообщений в …\nОсновная функция компонента\nКеширование сообщений\nБлокировка кеша для чтения в …\nОчистить кеш\nReturns the argument unchanged.\nВставить сообщение в кеш\nCalls <code>U::from(self)</code>.\nСоздаем новый пустой кеш\nБлокировка кеша для чтения\nБлокировка кеша для записи\nПодключение компонента к …\nСсылка на кэш TODO - проверить, …\nКлонировать и присвоить новый …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nСоздание подключения к …\nВозвращает копию сообщений из …\nВозвращает сообщение из кеша по …\nПолучение сообщений со входа\nОтправка сообщений на выход\nОтправка исходящих сообщений, в …\nПредставление обобщенного …\nИнтерфейс компонента, который …\nТрейт основной функции …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nСоздание компонента\nОсновная функция компонента\nЗапуск коллекции компонентов в …\nНастройка исполнителя\nДобавить компонент (?Send)\nРазмер буфера канала сообщения\nНазвание исполнителя\nФункция фильтрации сообщений в …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nСоздание коллекции компонентов\nСохраняем сообщение в кеше\nЗапустить на выполнение все …\nComponent input error\nComponent output error\nОшибки исполненителя …\nComponent execution error\nComponent initialization error\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nТип возвращаемого значения …\nContains the error value\nФункция фильтрации сообщений в …\nContains the success value\nContains the error value\nОшибки логгирования\nContains the success value\nКонфигурация логгирования для …\nОшибки логгирования\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nКонфигурация логгирования для …\nАдминистрирование\nРоли для доступа в системе\nПользовательские сообщения\nMessage deserialization error\nA <strong>data structure</strong> that can be deserialized from any data …\nОшибки работы с сообщениями\nПример канала сообщения\nПолный доступ\nТрейт для канала сообщений\nСообщение\nТолько просмотр\nТип сообщения\nОграничения на данные, которые …\nСтруктура для представления …\nБез ограничений\nУправление\nВыходной канал - по умолчанию …\nMessage serialization error\nA <strong>data structure</strong> that can be serialized into any data …\nСистемные сообщения\nМетка времени\nДанные\nDeserialize this value from the given Serde deserializer.\nПока эти модули не нужны, в …\nСтруктуры для упрощения …\nПример реализации сообщения. …\nКлюч\nМакрос для упрощения создания …\nSerialize this value into the given Serde serializer.\nТипы системных сообщений\nПуть, по котором передавалось …\nМетка времени\nДанные, которые не удалось …\nТекст ошибки\nАдминистрирование\nРоли для доступа в системе\nПолный доступ\nТолько просмотр\nБез ограничений\nУправление\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nТип аггрегации\nКоличество\nТекущее значение, к которому не …\nПредставление значения …\nПервое\nИнкремент\nМаксимум\nСреднее\nМинимум\nString\nСумма\nТип сохраняемого значения\nЗначение <code>Value</code> было получено с …\nТипы аггрегации, которые должны …\nМетка времени, к которой …\n<code>Attribute</code>\nbool\n<code>Entity</code>\nf64\nМетка времени\nu64\n<code>Value</code>\nТип аггрегации\nКоличество\nТекущее значение, к которому не …\nПервое\nИнкремент\nМаксимум\nСреднее\nМинимум\nСумма\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nПредставление значения …\nЗначение <code>Value</code> было получено с …\nТипы аггрегации, которые должны …\nМетка времени, к которой …\n<code>Attribute</code>\n<code>Entity</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nМетка времени\n<code>Value</code>\nString\nТип сохраняемого значения\nbool\nf64\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nu64\nКоманда или событие\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nСчетчик с нарастающим итогом\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nМгновенное значение\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMessage deserialization error\nОшибки работы с сообщениями\nMessage serialization error\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nДанные, которые не удалось …\nТекст ошибки\nПример реализации сообщения. …\nВложенная группа\nВложенная группа\nЗначение типа f64 в структуре\nВложенная в группу структура\nЗначение типа unit\nESP - кнопка BOOT\nESP - выход на реле\nПример типовой структуры\nПример структуры\nМгновенное значение типа bool\nМгновенное значение типа f64\nМгновенное значение типа String\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nПоле 1\nПоле 2\nПример канала сообщения\nВыходной канал - по умолчанию …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nСообщение\nДобавить запись пути\nПроверяем, что в трейсе …\nДанные\nОпределить ключ сообщения по …\nДесериализация сообщений из json\nReturns the argument unchanged.\nВозвращает данные сообщения, …\nCalls <code>U::from(self)</code>.\nКлюч\nСоздать новое сообщение\nСоздать новое сообщение типа …\nСериализация сообщений в json\nПуть, по котором передавалось …\nМетка времени\nТрейт для канала сообщений\nПреобразование в строку\nПреобразование в строку\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nПользовательские сообщения\nТип сообщения\nСистемные сообщения\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nОграничения на данные, которые …\nСтруктура для представления …\nЗапись пути\nДобавить запись пути\nОпределяет, есть ли в пути …\nReturns the argument unchanged.\nReturns the argument unchanged.\nСоздать новый уникальный …\nВозвращает все идентификаторы …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nЗапрос авторизации по логину и …\nЗапрос авторизации по логину и …\nЗапрос авторизации по токену\nЗапрос авторизации по токену\nОтказ в авторизации\nОтказ в авторизации\nПодтверждение авторизации\nПодтверждение авторизации\nПроверка связи - запрос …\nПроверка связи - запрос …\nПроверка связи - ответ от …\nПроверка связи - ответ от …\nТипы системных сообщений\nПорядковый номер запроса\nПорядковый номер запроса\nПричина отказа\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nЛогин\nЛогин для входа\nПароль\nРазрешения\nТокен\nСгенерированный токен\nИдентификаторы компонентов, …\nИдентификаторы компонентов, …\nЗапрос авторизации по логину и …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nЛогин\nПароль\nЗапрос авторизации по токену\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nТокен\nОтказ в авторизации\nПричина отказа\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nИдентификаторы компонентов, …\nПодтверждение авторизации\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nЛогин для входа\nРазрешения\nСгенерированный токен\nИдентификаторы компонентов, …\nПроверка связи - запрос …\nПроверка связи - ответ от …\nПорядковый номер запроса\nПорядковый номер запроса\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nМетка времени\nПреобразовать в строку с …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nВозвращает время Unix с …\nReturns an RFC 3339 and ISO 8601 date and time string such …")