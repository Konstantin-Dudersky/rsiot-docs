searchState.loadedDescShard("rsiot", 0, "Компоненты для построения …\nКомпоненты\nСтруктуры для конфигурации …\nЗагрузка переменных среды из ОС …\nИсполнитель - структура для …\nНастройки логгирования для …\nПредставление сообщений в …\nШаблон компонента\nКомпонент для добавления …\nКомпонент для отправки …\nКомпонент авторизации …\nКомпонент для создания …\nТестирование документации:\nКомпонент HTTP-клиент\nКомпонент для получения данных …\nКомпонент для взаимодействия с …\nКомпонент для периодического …\nКомпонент для логгирования …\nОпрос устройств Modbus, используя …\nШаблон компонента\nИсполнение логики работы в …\nКомпонент для подключения к Redis.\nКомпонент для взаимодействия с …\nКомпонент для взаимодействия с …\nКомпонент сохранения данных в …\nКомпонент клиента websocket\nКомпонент для подключения …\nContains the error value\nContains the success value\nКомпонент CMP_TEMPLATE\nПример\nПример\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nНастройки\nКомпонент cmp_add_input_stream\nВнешний канал broadcast, на который …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nНастройки\nКомпонент cmp_add_output_stream\nВнешний канал mpsc, в который …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nКомпонент cmp_auth\nCmpOutput\n…\nТип хранилища данных доступа\nЗапись данных авторизации для …\nContains the error value\nОшибки cmp_auth\nHmac error\nJwt error\nЛокальное сохранение - в коде\nContains the success value\nProcessRequest\nВ базе данных SurrealDB\nTokioTaskJoinError\nЛогин\nПароль\nРоль\n…\n…\nКомпонент cmp_auth\n…\nТип хранилища данных доступа\nЗапись данных авторизации для …\nЛокальное сохранение - в коде\nВ базе данных SurrealDB\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nЛогин\nПароль\nРоль\n…\n…\nCmpOutput\nОшибки cmp_auth\nHmac error\nJwt error\nProcessRequest\nTokioTaskJoinError\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nОбработка запроса по …\nОбработка запроса по токену\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nКомпонент cmp_derive\nНастройки cmp_derive\nХранение данных для …\nТрейт для запуска …\nContains the error value\nОшибки cmp_derive\nContains the success value\nTokioSynBroadcast\nTokioTaskJoin\nВектор структур <code>DeriveItem</code>\nОбработка входящих сообщений и …\nФормирование исходящих …\nФункция преобразования\nСтруктура для сохранения …\nКомпонент cmp_derive\nНастройки cmp_derive\nВектор структур <code>DeriveItem</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nХранение данных для …\nОбработка входящих сообщений и …\nФормирование исходящих …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nСтруктура для сохранения …\nТрейт для запуска …\nФункция преобразования\nОшибки cmp_derive\nTokioSynBroadcast\nTokioTaskJoin\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nКомпонент cmp_external_fn_process\nНастройки cmp_external_fn_process\nВнешняя функция для выполнения\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nКоллбек неуспешного ответа\nКоллбек успешного ответа\nКомпонент cmp_http_client\nComponentCore\nПараметры компонента http-client\nОшибка конфигурации …\nПараметры HTTP-сервера, к …\nContains the error value\nОшибки cmp_http_client\nGET method\nПараметры HTTP\nContains the success value\nPOST method\nPUT method\nПараметры запроса на основе …\nПараметры периодического …\nReqwest\nResponseCallback\nSendChannel\nTokioJoin\nURL сервера\nПараметры подключения\nФункция выдает параметры …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nПараметры запроса\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nФункция обработки …\nФункция обработки …\nФункция обработки корректного …\nФункция обработки корректного …\nПериодичность вызова\nЗапросы, которые формируются на …\nПериодические запросы\nBody of request\nBody of request\nEndpoint for connections\nEndpoint for connection\nEndpoint for connection\nКомпонент cmp_http_client\nComponentCore\nОшибка конфигурации …\nОшибки cmp_http_client\nReqwest\nResponseCallback\nSendChannel\nTokioJoin\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nВыполнение запроса и вызов …\nВыполнение HTTP запроса\nЗадача обработки запросов на …\nОсновная задача\nЗадача обработки …\nКомпонент cmp_http_server\nКонфигурация компонента http-server\nФункция преобразования …\nФункция преобразования текста …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nПорт, через который доступен …\nКомпонент cmp_http_server\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nОшибка Axum\nОшибка привязки к порту\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nКомпонент для получения и ввода …\nМаршрут для получения сообщений\nМаршрут для получения всех …\nМаршрут для ввода сообщений\nМаршрут для получения сообщений\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nКомпонент cmp_influxdb\nКонфигурация cmp_influxdb\nConfig\nContains the error value\nОшибки cmp_influxdb\nСтрока записи в данных в базу …\nContains the success value\nRequestParameters\nReqwest\nWrongTimestamp\nBucket\nФункция преобразования …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nПримеры\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nmeasurement\nНовая строка записи\nОгранизация\nПорт базы данных\nТокен\nМетка времени\nvalue\nmessage\nstatus\nКомпонент cmp_influxdb\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConfig\nОшибки cmp_influxdb\nRequestParameters\nReqwest\nWrongTimestamp\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nmessage\nstatus\nКомпонент cmp_inject_periodic\nКонфигурация cmp_inject_periodic\nФункция для генерирования …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nПериод вызова\nКомпонент cmp_logger\nНастройки компонента …\nФункция преобразования …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nУровень логгирования\nМассив бит\nКонфигурация Modbus клиента\nОбмен данными с устройством, …\nКонфигурация cmp_modbus_client\nContains the error value\nКоллбек при неуспешном опросе\nКоллбек при успешном опросе\nКонфигурация запросов, которые …\nContains the success value\nКонфигурация запросов, которые …\n(start address, count)\n(start address, count)\nПараметры запроса Modbus\nОтвет от устройства\nВариант для Modbus RTU\nВариант для Modbus TCP\nКонфигурация Modbus TCP клиента\nБез ответа\nМассив слов\n(address, value)\nНастройки подключения к …\nМодуль для конвертации …\ntrue - разрешение работы\nФункция формирования запроса …\nФункция вызывается при ошибке …\nФункция вызывается при ошибке …\nФункция вызывается при успешно …\nФункция вызывается при успешно …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIP-адрес устройства\nКонфигурация запросов на …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nПериодичность выполенения …\nКонфигурация периодических …\nПорт устройства (обычно 502)\nЗапрос для выполнения\nАдрес подчиненного устройства …\nКомпонент cmp_modbus_client\nКонвертация двух регистров в f32\nКонвертация двух регистров в u32\nКонвертация двух регистров в f32, …\nКонвертация двух регистров в f32, …\nКонвертация двух регистров в f32, …\nКонвертация двух регистров в f32, …\nКонвертация двух регистров в u32, …\nКонвертация двух чисел u16 в …\nПроверка правильной длины среза\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nВыполняем запрос modbus\nОбратываем ответ modbus\nЗадача обработки запроса на …\nЗадача обработки …\nКомпонент cmp_mqtt_client\nКонфигурация cmp_mqtt_client\nContains the error value\nContains the success value\nИдентификатор клиента MQTT\nФункция преобразования …\nФункция преобразования данных, …\nReturns the argument unchanged.\nАдрес брокера\nCalls <code>U::from(self)</code>.\nПорт брокера.\nКомпонент cmp_mqtt_client\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nОбработка входящих сообщений и …\nПолучение данных по подписке от …\nКомпонент cmp_plc\nCmpOutput\nКонфигурация компонента ПЛК\nContains the error value\nОшибки cmp_plc\nContains the success value\nTokioTaskJoin\nГлавный функциональный блок ПЛК\nФункция инициализации входной …\nФункция преобразования …\nФункция преобразования …\nПериодичность выполнения …\nМодули, связанные с работой plc\nШаблон для нового …\nКомпонент cmp_plc\nКонфигурация компонента ПЛК\nГлавный функциональный блок ПЛК\nФункция инициализации входной …\nФункция преобразования …\nФункция преобразования …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nПериодичность выполнения …\nCmpOutput\nОшибки cmp_plc\nTokioTaskJoin\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nИсполнение одного цикла ПЛК\nИсполнение логики ПЛК в цикле\nСохранение входящих сообщений …\nФункциональный блок\nБиблиотека функциональных …\nТипы данных в ПЛК\nФункциональный блок\nТрейт для логики выполнения …\nВызов функционального блока\nReturns the argument unchanged.\nВходные данные\nCalls <code>U::from(self)</code>.\nОсновная логика выполнения …\nСоздание экземпляря …\nВыходные данные\nСтатичные данные - сохраняются …\nОпределение фронта сигнала\nТаймеры\nФронт сигнала 0 -&gt; 1\nФронт сигнала 0 -&gt; 1\nВходные данные\nВыходные данные\nСтатичные данные\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nСигнал, фронт которого нужно …\nВходные данные\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nВыходные данные\nУстанавливается в true на один …\nСтатичные данные - сохраняются …\nТаймер TON\nТаймер TON\nВходные данные\nВыходные данные\nСтатичные данные\nВремя работы таймера\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nВходные данные\nВходной сигнал для контроля\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nВыходные данные\nУстанавливается в true, когда …\nЗадание времени\nСтатичные данные - сохраняются …\nПромежуток времени\nМетка времени\nМетка времени\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nВходные данные\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nВыходные данные\nСтатичные данные - сохраняются …\nКомпонент cmp_redis_client\nКонфигурация cmp_redis_client\nСтруктура с информацией для …\nКанал Pub/Sub, в котором …\nФункция преобразования …\nФункция преобразования данных …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nКлюч для сохранения в кеше Redis\nНазвание канала для подписки …\nАдрес сервера Redis\nЗначение для сохранения - само …\nКомпонент cmp_redis_client\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nОшибка десериализации\nОшибка подключения к redis\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nContains the error value\nContains the success value\nЗадача публикации в канале Pub/Sub, …\nЧтение данных из хеша\nПодписка на канал Pub/Sub\nКомпонент cmp_slint\nНастройки компонента cmp_slint\nContains the error value\nErrors of cmp_slint\nContains the success value\nФункция обработки входящих …\nФункция генерирования …\nСсылка на главное окно\nКомпонент cmp_slint\nНастройки компонента cmp_slint\nФункция обработки входящих …\nФункция генерирования …\nReturns the argument unchanged.\nСсылка на главное окно\nCalls <code>U::from(self)</code>.\nErrors of cmp_slint\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nКомпонент cmp_surrealdb\nКонфигурация cmp_surrealdb\nContains the error value\nОшибки cmp_surrealdb\nКонфигурация запросов, которые …\nContains the success value\nSurrealDB\nTokioTaskJoin\nrsiot\nФункция формирования запроса …\nФункция вызывается при ошибке …\nФункция вызывается при успешно …\nlocalhost\nСкрипт для инициализации\nКонфигурация запросов на …\nrsiot\nroot\n8000\nroot\nКомпонент cmp_surrealdb\nКонфигурация cmp_surrealdb\nКонфигурация запросов, которые …\nrsiot\nФункция формирования запроса …\nФункция вызывается при ошибке …\nФункция вызывается при успешно …\nReturns the argument unchanged.\nReturns the argument unchanged.\nlocalhost\nСкрипт для инициализации\nКонфигурация запросов на …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nrsiot\nroot\n8000\nroot\nОшибки cmp_surrealdb\nSurrealDB\nTokioTaskJoin\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nПодключение к БД\nВыполнение первоначального …\nКомпонент сохранения сообщений …\nКомпонент сохранения сообщений …\nСтрока подключения к БД\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nМодели данных для сохранения в …\nКомпонент cmp_timescaledb\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nМодель строки в БД\nПредставление аггрегации в БД\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nМодель строки в БД\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nКомпонент cmp_websocket_client\nНастройки Websocket-клиента\nПреобразование входящих …\nПреобразование полученного от …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nАдрес Websocket-сервера\nКомпонент cmp_websocket_client\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nПодключаемся к серверу и …\nЗадача приема данных с сервера …\nЗадача отправки данных на …\nКомпонент cmp_websocker_server\nКонфигурация Websocket-сервера\nContains the error value\nContains the success value\nФункция преобразования …\nФункция преобразования текста, …\nКомпонент для подключения …\nReturns the argument unchanged.\nСоздание и управление …\nCalls <code>U::from(self)</code>.\nПорт, через который доступен …\nКомпонент cmp_websocker_server\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nСоздание и управление …\nПолучение данных от клиента\nПри подключении нового клиента …\nПри получении новых сообщений, …\nОтправляем данные клиенту\nКонфигурация HTTP-сервера\nКонфигурация клиента InfluxDB\nКонфигурация Redis-клиента\nКонфигурация Websocket-сервера\nНастройки подключения к …\nПараметры компонента http-client\nПараметры подключения\nЗапросы, которые формируются на …\nПериодические запросы\nПараметры HTTP-сервера, к …\nURL сервера\nGET method\nПараметры HTTP\nPOST method\nPUT method\nBody of request\nBody of request\nEndpoint for connections\nEndpoint for connection\nEndpoint for connection\nПараметры запроса на основе …\nФункция выдает параметры …\nФункция обработки …\nФункция обработки корректного …\nПараметры периодического …\nПараметры запроса\nФункция обработки …\nФункция обработки корректного …\nПериодичность вызова\nКоллбек неуспешного ответа\nКоллбек успешного ответа\nКонфигурация компонента http-server\nФункция преобразования …\nФункция преобразования текста …\nПорт, через который доступен …\nТестирование:\nКонфигурация cmp_influxdb\nBucket\nФункция преобразования …\nПримеры\nОгранизация\nПорт базы данных\nТокен\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nСтрока записи в данных в базу …\nmeasurement\nМетка времени\nvalue\nКонфигурация запросов, которые …\nКонфигурация запросов, которые …\nКонфигурация Modbus клиента\nКонфигурация cmp_modbus_client\nВариант для Modbus RTU\nВариант для Modbus TCP\nКонфигурация Modbus TCP клиента\nНастройки подключения к …\ntrue - разрешение работы\nIP-адрес устройства\nКонфигурация запросов на …\nКонфигурация периодических …\nПорт устройства (обычно 502)\nАдрес подчиненного устройства …\nКонфигурация запросов, которые …\nФункция формирования запроса …\nФункция вызывается при ошибке …\nФункция вызывается при успешно …\nКонфигурация запросов, которые …\nФункция вызывается при ошибке …\nФункция вызывается при успешно …\nПериодичность выполенения …\nЗапрос для выполнения\n(start address, count)\n(start address, count)\nПараметры запроса Modbus\n(address, value)\nМассив бит\nОтвет от устройства\nБез ответа\nМассив слов\nКоллбек при неуспешном опросе\nКоллбек при успешном опросе\nКонфигурация cmp_mqtt_client\nИдентификатор клиента MQTT\nФункция преобразования …\nФункция преобразования данных, …\nАдрес брокера\nПорт брокера.\nКонфигурация cmp_redis_client\nСтруктура с информацией для …\nКанал Pub/Sub, в котором …\nФункция преобразования …\nФункция преобразования данных …\nКлюч для сохранения в кеше Redis\nНазвание канала для подписки …\nАдрес сервера Redis\nЗначение для сохранения - само …\nКонфигурация Timescaledb\nСтрока подключения к БД\nНастройки Websocket-клиента\nПреобразование входящих …\nПреобразование полученного от …\nАдрес Websocket-сервера\nКонфигурация Websocket-сервера\nФункция преобразования …\nФункция преобразования текста, …\nПорт, через который доступен …\nОшибки модуля работы с …\nТрейт, который должна …\nIoError\nLoadFromEnvironment\nLoadFromFile\nSerializeError\nToUppercase\nCLI интерфейс\nСериализация настроек\nЗапускаем CLI\nТрейт, который должна …\nЗагрузить настройки\nПроверка файла .env на наличие и …\nСтруктура входа CLI\nПеречент команд CLI\nСоздать файл .env.example с …\nЗапускаем CLI\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nСоздать файл с настройками …\nПеревести название переменной …\nИтерируемся по строкам и в …\nОшибки модуля работы с …\nIoError\nLoadFromEnvironment\nLoadFromFile\nSerializeError\nToUppercase\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nТрейт, который должна …\nЗагрузить настройки\nЗагружаем переменные из …\nЗагружаем переменные из файла …\nКеширование сообщений\nПодключение компонента к …\nComponent input error\nComponent output error\nТип возвращаемого значения …\nПредставление обобщенного …\nОшибки исполненителя …\nЗапуск коллекции компонентов в …\nНастройка исполнителя\nContains the error value\nComponent execution error\nТрейт основной функции …\nComponent initialization error\nContains the success value\nРазмер буфера канала сообщения\nСсылка на кэш TODO - проверить, …\nНазвание исполнителя\nФункция фильтрации сообщений в …\nОсновная функция компонента\nКеширование сообщений\nБлокировка кеша для чтения в …\nОчистить кеш\nReturns the argument unchanged.\nВставить сообщение в кеш\nCalls <code>U::from(self)</code>.\nСоздаем новый пустой кеш\nБлокировка кеша для чтения\nБлокировка кеша для записи\nПодключение компонента к …\nСсылка на кэш TODO - проверить, …\nКлонировать и присвоить новый …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nСоздание подключения к …\nВозвращает копию сообщений из …\nВозвращает сообщение из кеша по …\nПолучение сообщений со входа\nОтправка сообщений на выход\nОтправка исходящих сообщений, в …\nПредставление обобщенного …\nИнтерфейс компонента, который …\nТрейт основной функции …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nСоздание компонента\nОсновная функция компонента\nЗапуск коллекции компонентов в …\nНастройка исполнителя\nДобавить компонент (?Send)\nРазмер буфера канала сообщения\nНазвание исполнителя\nФункция фильтрации сообщений в …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nСоздание коллекции компонентов\nСохраняем сообщение в кеше\nЗапустить на выполнение все …\nComponent input error\nComponent output error\nОшибки исполненителя …\nComponent execution error\nComponent initialization error\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nТип возвращаемого значения …\nContains the error value\nФункция фильтрации сообщений в …\nContains the success value\nContains the error value\nОшибки логгирования\nLoki error\nContains the success value\nParse error\nНастройка логгирования\nОшибки логгирования\nLoki error\nParse error\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nНастройка логгирования\nУдалить путь из названия файла\nАдминистрирование\nРоли для доступа в системе\nПользовательские сообщения\nMessage deserialization error\nA <strong>data structure</strong> that can be deserialized from any data …\nОшибки работы с сообщениями\nПример канала сообщения\nПолный доступ\nТрейт для канала сообщений\nСообщение\nТолько просмотр\nТип сообщения\nОграничения на данные, которые …\nСтруктура для представления …\nБез ограничений\nУправление\nВыходной канал - по умолчанию …\nMessage serialization error\nA <strong>data structure</strong> that can be serialized into any data …\nСистемные сообщения\nМетка времени\nДанные\nDeserialize this value from the given Serde deserializer.\nПока эти модули не нужны, в …\nСтруктуры для упрощения …\nПример реализации сообщения. …\nКлюч\nМакрос для упрощения создания …\nSerialize this value into the given Serde serializer.\nТипы системных сообщений\nПуть, по котором передавалось …\nМетка времени\nДанные, которые не удалось …\nТекст ошибки\nАдминистрирование\nРоли для доступа в системе\nПолный доступ\nТолько просмотр\nБез ограничений\nУправление\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nТип аггрегации\nКоличество\nТекущее значение, к которому не …\nПредставление значения …\nПервое\nИнкремент\nМаксимум\nСреднее\nМинимум\nString\nСумма\nТип сохраняемого значения\nЗначение <code>Value</code> было получено с …\nТипы аггрегации, которые должны …\nМетка времени, к которой …\n<code>Attribute</code>\nbool\n<code>Entity</code>\nf64\nМетка времени\nu64\n<code>Value</code>\nТип аггрегации\nКоличество\nТекущее значение, к которому не …\nПервое\nИнкремент\nМаксимум\nСреднее\nМинимум\nСумма\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nПредставление значения …\nЗначение <code>Value</code> было получено с …\nТипы аггрегации, которые должны …\nМетка времени, к которой …\n<code>Attribute</code>\n<code>Entity</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nМетка времени\n<code>Value</code>\nString\nТип сохраняемого значения\nbool\nf64\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nu64\nКоманда или событие\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nСчетчик с нарастающим итогом\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nМгновенное значение\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMessage deserialization error\nОшибки работы с сообщениями\nMessage serialization error\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nДанные, которые не удалось …\nТекст ошибки\nПример реализации сообщения. …\nВложенная группа\nВложенная группа\nЗначение типа f64 в структуре\nВложенная в группу структура\nЗначение типа unit\nESP - кнопка BOOT\nESP - выход на реле\nПример типовой структуры\nПример структуры\nМгновенное значение типа bool\nМгновенное значение типа f64\nМгновенное значение типа String\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nПоле 1\nПоле 2\nПример канала сообщения\nВыходной канал - по умолчанию …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nСообщение\nДобавить запись пути\nПроверяем, что в трейсе …\nДанные\nОпределить ключ сообщения по …\nДесериализация сообщений из json\nReturns the argument unchanged.\nВозвращает данные сообщения, …\nCalls <code>U::from(self)</code>.\nКлюч\nСоздать новое сообщение\nСоздать новое сообщение типа …\nСериализация сообщений в json\nПуть, по котором передавалось …\nМетка времени\nТрейт для канала сообщений\nПреобразование в строку\nПреобразование в строку\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nПользовательские сообщения\nТип сообщения\nСистемные сообщения\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nОграничения на данные, которые …\nСтруктура для представления …\nЗапись пути\nДобавить запись пути\nОпределяет, есть ли в пути …\nReturns the argument unchanged.\nReturns the argument unchanged.\nСоздать новый уникальный …\nВозвращает все идентификаторы …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nЗапрос авторизации по логину и …\nЗапрос авторизации по логину и …\nЗапрос авторизации по токену\nЗапрос авторизации по токену\nОтказ в авторизации\nОтказ в авторизации\nПодтверждение авторизации\nПодтверждение авторизации\nПроверка связи - запрос …\nПроверка связи - запрос …\nПроверка связи - ответ от …\nПроверка связи - ответ от …\nТипы системных сообщений\nПорядковый номер запроса\nПорядковый номер запроса\nПричина отказа\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nЛогин\nЛогин для входа\nПароль\nРазрешения\nТокен\nСгенерированный токен\nИдентификаторы компонентов, …\nИдентификаторы компонентов, …\nЗапрос авторизации по логину и …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nЛогин\nПароль\nЗапрос авторизации по токену\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nТокен\nОтказ в авторизации\nПричина отказа\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nИдентификаторы компонентов, …\nПодтверждение авторизации\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nЛогин для входа\nРазрешения\nСгенерированный токен\nИдентификаторы компонентов, …\nПроверка связи - запрос …\nПроверка связи - ответ от …\nПорядковый номер запроса\nПорядковый номер запроса\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nМетка времени\nПреобразовать в строку с …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nВозвращает время Unix с …\nReturns an RFC 3339 and ISO 8601 date and time string such …")