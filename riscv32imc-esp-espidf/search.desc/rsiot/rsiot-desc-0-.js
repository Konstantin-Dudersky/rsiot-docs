searchState.loadedDescShard("rsiot", 0, "Компоненты для построения …\nКомпоненты\nДрайверы для протокола I2C\nИсполнитель - структура для …\nПримеры файлов конфигурации …\nНастройки логгирования для …\nПредставление сообщений в …\nКомпонент для добавления …\nКомпонент для отправки …\nКомпонент для создания …\nКомпонент для работы с входами …\nКомпнент опроса по протоколу i2c …\nКомпонент для подключения …\nКомпонент для управления …\nКлиент MQTT микроконтроллера ESP32\nКомпонент для сохранения / …\nКомпонент для работы с …\nШаблон компонента\nТестирование документации:\nКомпонент HTTP-клиент для …\nHTTP-сервер в микроконтроллере ESP32\nКомпонент для периодического …\nКомпонент для логгирования …\nИсполнение логики работы в …\nЗадачи, которые можно …\nНастройки\nКомпонент cmp_add_input_stream\nВнешний канал broadcast, на который …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nНастройки\nКомпонент cmp_add_output_stream\nВнешний канал mpsc, в который …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nКомпонент cmp_derive\nНастройки cmp_derive\nХранение данных для …\nТрейт для запуска …\nОшибки cmp_derive\nTokioSynBroadcast\nTokioTaskJoin\nВектор структур <code>DeriveItem</code>\nОбработка входящих сообщений и …\nФормирование исходящих …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nФункция преобразования\nСтруктура для сохранения …\nКомпонент cmp_esp_wifi\n…\nКонфигурация одного входа\nКонфигурация одного выхода\nОшибки cmp_esp_gpio\nФункция преобразования …\nФункция преобразования …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\n…\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nПодается ли напряжения в …\n…\nПин\nПин\nПодключение резистора подтяжки\nКомпонент cmp_esp_i2c_master\nКонфигурация cmp_esp_i2c_master\nСкорость шины\n400 kHz\n100 kHz\nСкорость\nКонфигурация устройств по шине\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nСсылка на аппартный интерфейс I2C\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\ntrue - подключить подтяжку …\nПин сигнала SCL\nПин сигнала SDA\nТаймаут запроса\nОграничения на структуру …\nКомпонент cmp_esp_i2c_slave\nКонфигурация cmp_esp_i2c_slave\nФункция для работы …\nФункция преобразования входных …\nФункция для преобразования …\nСтруктура для хранения …\nФункция для обработки …\nФункция преобразования входных …\nФункция для преобразования …\nПериод вызова <code>fn_output</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nСсылка на аппартный интерфейс I2C\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nПин сигнала SCL\nПин сигнала SDA\nАдрес на шине I2C\nЗадержка запуска обмена по I2C. …\nКомпонент cmp_esp_led\nКонфигурация cmp_esp_led\nЗадание цвета\nИ\nФункция преобразования …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nG\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nКол-во светодиодов\nПин для управляющего сигнала\nR\nКанал для управления сигналом RMT\nКомпонент cmp_esp_mqtt_client\nКонфигурация cmp_mqtt_client\nИдентификатор клиента MQTT\nФункция преобразования …\nФункция преобразования данных, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nАдрес брокера\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nПорт брокера.\nКомпонент cmp_storage_esp\nКонфигурация cmp_storage_esp\nФункция для сохранения …\nФункция для выдачи сообщений из …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nКомпонент cmp_esp_spi_master\nКонфигурация компонента …\nКонфигурация подчиненных …\nМассив конфигураций …\nФункция инициализации\nФункция преобразования …\nФункция преобразования данных …\nПериод вызова функций fn_output …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nПин CS\nПин MISO\nПин MOSI\nПин SCK\nСсылка на аппартный интерфейс SPI\nКомпонент cmp_esp_wifi\nКонфигурация cmp_esp_wifi\nНастройка WiFi как точки доступа\nНастройка WiFi как клиента\nОшибки cmp_esp_wifi\nНастройка WiFi как точки доступа\nЗащита сети\nНастройка WiFi как клиента\nСсылка на цикл событий\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nTry to create Self from the raw representation\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nПароль точки доступа\nМодем для подключения\nНазвание точки доступа\nНазвание точки доступа\nСсылка на таймер\nКомпонент cmp_external_fn_process\nНастройки cmp_external_fn_process\n<code>BoxFuture</code>, but without the <code>Send</code> requirement.\nВнешняя функция для выполнения\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nКоллбек неуспешного ответа\nКоллбек успешного ответа\nКомпонент cmp_http_client_esp\nПараметры компонента http-client\nОшибка конфигурации …\nПараметры HTTP-сервера, к …\nGET method\nПараметры HTTP\nPOST method\nPUT method\nПараметры запроса на основе …\nПараметры периодического …\nURL сервера\nПараметры подключения\nФункция выдает параметры …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nПараметры запроса\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nФункция обработки …\nФункция обработки …\nФункция обработки корректного …\nФункция обработки корректного …\nПериодичность вызова\nЗапросы, которые формируются на …\nПериодические запросы\nBody of request\nBody of request\nEndpoint for connections\nEndpoint for connection\nEndpoint for connection\nКомпонент cmp_http_server_esp\nКонфигурация компонента http-server\nОшибки cmp_http_server_esp\nФункция преобразования …\nФункция преобразования текста …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nПорт, через который доступен …\nКомпонент cmp_inject_periodic\nКонфигурация cmp_inject_periodic\nФункция для генерирования …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nПериод вызова\nКомпонент cmp_logger\nНастройки компонента …\nThe “debug” level.\nThe “error” level.\nThe “info” level.\nDescribes the level of verbosity of a span or event.\nThe “trace” level.\nThe “warn” level.\nReturns the string representation of the <code>Level</code>.\nФункция преобразования …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nУровень логгирования\nКомпонент cmp_plc\nCmpOutput\nКонфигурация компонента ПЛК\nНастройка сохранения и …\nОшибки cmp_plc\nГлавный функциональный блок ПЛК\nФункция инициализации входной …\nФункция преобразования …\nФункция восстановления …\nФункция преобразования …\nФункция преобразования …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nПериодичность выполнения …\nМодули, связанные с работой plc\nТаймаут восстановления\nНастройки сохранения состояния …\nПериодичность сохранения …\nСистемные данные …\nФункциональный блок\nТрейт для логики выполнения …\nВызов функционального блока\ntrue - первый вызов …\nReturns the argument unchanged.\nReturns the argument unchanged.\nВходные данные\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nБиблиотека функциональных …\nОсновная логика выполнения …\nСоздание экземпляря …\nВыходные данные\nСтатичные данные - сохраняются …\nТипы данных в ПЛК\nДвигатели, клапана\nОпределение фронта сигнала\nОбработка событий\nТаймеры\nmotor\nПереключение режима\nВыбор уставки из двух …\nmotor\nmotor\nВ ошибке\nmotor\nВходная структура\nКоманда с hmi\nОбласть памяти output\nРазрешения для работы с hmi\nСтатут для вывода на hmi\nСостояние\nОбласть памяти stat\nСтарт\nСтоп\nКоманда на запуск в режиме auto\nКоманда на останов в режиме stop\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nКоманда с hmi\nРазрешения для работы с hmi\nСтатус для вывода на hmi\nВходные данные\nfalse - блокировка работы\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nРазрешение включения в ручном …\nЗапуск\nРазрешение отключения в ручном …\nСтоп\nРежим работы\nРежим работы\nПереключение в режим auto из …\nРазрешение переключения в …\nПереключение в режим auto из hmi\nПереключение в режим local из …\nРазрешение переключения в …\nПереключение в режим local из hmi\nПереключение в режим manual из …\nРазрешение переключения в …\nПереключение в режим man из hmi\nПереключение в режим oos из …\nРазрешение переключения в …\nПереключение в режим oos из hmi\nИсточник выбора режима:\nНет команды - по-умолчанию\nВыходные данные\n1 = команда на запуск двигателя\ntrue - команда на запуск\nСтатичные данные - сохраняются …\nСостояние\nКоманда на запуск\nАвтоматический режим\nПереключение режима\nВходная структура\nКоманда с hmi\nМестный\nРучной\nOut of service - выведен из …\nОбласть памяти output\nРазрешения для работы с hmi\nСтатут для вывода на hmi\nРежим работы\nОбласть памяти stat\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nКоманда с hmi\nРазрешения для работы с hmi\nСтатус для вывода на hmi\nВходные данные\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nРежим работы\nРежим работы\nрежим работы\nПереключение в режим auto из …\nРазрешение переключения в …\nПереключение в режим auto из hmi\nПереключение в режим local из …\nРазрешение переключения в …\nПереключение в режим local из hmi\nПереключение в режим manual из …\nРазрешение переключения в …\nПереключение в режим man из hmi\nПереключение в режим oos из …\nРазрешение переключения в …\nПереключение в режим oos из hmi\nИсточник выбора режима:\nНет команды - по-умолчанию\nВыходные данные\nСтатичные данные - сохраняются …\nmotor\nВходная структура\nКоманда с hmi\nОбласть памяти output\nРазрешения для работы с hmi\nСтатут для вывода на hmi\nОбласть памяти stat\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nКоманда с hmi\nРазрешения для работы с hmi\nСтатус для вывода на hmi\nВходные данные\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nНет команды\nВыходные данные\nЗадание\nЗадание\nВыбор источника команд выбора (…\nИзменение значения sp\nЗадание из hmi\nЗадание из hmi\nАктивно задание из hmi\nАктивно задание из hmi\nАктивировать задание из hmi\nАктивировать задание из hmi\nАктивировать задание из hmi\nАктивация любого задания: …\nЗадание из plc\nАктивно задание из plc\nАктивно задание из plc\nАктивно задание из plc\nАктивировать задание из plc\nАктивировать задание из plc\nАктивировать задание из plc\nСтатичные данные - сохраняются …\nВ ошибке\nЗакрыт\nЗакрытие\nmotor\nВходная структура\nКоманда с hmi\nОткрыт\nОткрытие\nОбласть памяти output\nРазрешения для работы с hmi\nСтатут для вывода на hmi\nСостояние\nОбласть памяти stat\nКоманда на закрытие в …\nКоманда на открытие в …\nКоманда на управление\ntrue - команда на управление\nКоманда на запуск\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nКоманда с hmi\nРазрешения для работы с hmi\nСтатус для вывода на hmi\nВходные данные\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nЗакрыть в ручном режиме из hmi\nОткрыть в ручном режиме из hmi\nРазрешение включения в ручном …\nРазрешение отключения в ручном …\nРежим работы\nРежим работы\nПереключение в режим auto из …\nРазрешение переключения в …\nПереключение в режим auto из hmi\nПереключение в режим local из …\nРазрешение переключения в …\nПереключение в режим local из hmi\nПереключение в режим manual из …\nРазрешение переключения в …\nПереключение в режим man из hmi\nПереключение в режим oos из …\nРазрешение переключения в …\nПереключение в режим oos из hmi\nИсточник выбора режима:\nНет команды - по-умолчанию\nВыходные данные\nСтатичные данные - сохраняются …\nСостояние\nВ ошибке\nЗакрыт\nЗакрытие\nmotor\nВходная структура\nКоманда с hmi\nОткрыт\nОткрытие\nОбласть памяти output\nРазрешения для работы с hmi\nСтатут для вывода на hmi\nСостояние\nОбласть памяти stat\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nКоманда с hmi\nРазрешения для работы с hmi\nСтатус для вывода на hmi\nВходные данные\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nРазрешение включения в ручном …\nРазрешение отключения в ручном …\nРежим работы\nРежим работы\nПереключение в режим auto из …\nРазрешение переключения в …\nПереключение в режим auto из hmi\nПереключение в режим local из …\nРазрешение переключения в …\nПереключение в режим local из hmi\nПереключение в режим manual из …\nРазрешение переключения в …\nПереключение в режим man из hmi\nПереключение в режим oos из …\nРазрешение переключения в …\nПереключение в режим oos из hmi\nИсточник выбора режима:\nЗадание\nЗадание\nЗадание открытия\nВыбор источника команд выбора (…\nИзменение значения sp\nЗадание из hmi\nАктивно задание из hmi\nАктивно задание из hmi\nАктивировать задание из hmi\nАктивировать задание из hmi\nАктивировать задание из hmi\nАктивация любого задания: …\nЗадание из plc\nАктивно задание из plc\nАктивно задание из plc\nАктивировать задание из plc\nАктивировать задание из plc\nАктивировать задание из plc\nНет команды - по-умолчанию\nВыходные данные\nФактическое открытие\nФактическое открытие\nСтатичные данные - сохраняются …\nСостояние\nКоманда на запуск\nФронт сигнала 0 -&gt; 1\nФронт сигнала 0 -&gt; 1\nВходные данные\nВыходные данные\nСтатичные данные\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nСигнал, фронт которого нужно …\nВходные данные\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nВыходные данные\nУстанавливается в true на один …\nСтатичные данные - сохраняются …\nУровень события\nСобрать аварии\nОпределить макс. уровень из …\nФункциональный блок события\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nmotor\nВходная структура\nКоманда с hmi\nНет команды - по-умолчанию\nОбласть памяти output\nСтатут для вывода на hmi\nОбласть памяти stat\nСтатусы аварий\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nКоманда с hmi\nСтатус для вывода на hmi\nВходные данные\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nВыходные данные\nСтатичные данные - сохраняются …\nКвитирование сообщения из Hmi\nКвитирование всех сообщений\nАктивно, квитировано\nАктивно, неквитировано\nmotor\nВходная структура\nКоманда с hmi\nНеактивно, квитировано\nНеактивно, неквитировано\nНет команды - по-умолчанию\nОбласть памяти output\nСостояние для HMI\nОбласть памяти stat\nСостояние сообщения\nУровень события\nУровень события\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nКоманда с hmi\nСтатус для вывода на hmi\nИдентификатор события\nИдентификатор события\nВходные данные\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nВыходные данные\nСигнал наступления события\nСтатичные данные - сохраняются …\nСостояние события\nСостояние события\nСостояние сообщения\nТекст события\nТекст события\nТаймер TON\nТаймер TON\nВходные данные\nВыходные данные\nСтатичные данные\nВремя работы таймера\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nВходные данные\nВходной сигнал для контроля\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nВыходные данные\nУстанавливается в true, когда …\nЗадание времени\nСтатичные данные - сохраняются …\nСтруктура данных, которая …\nПромежуток времени\nМетка времени\nReturns the argument unchanged.\nПолучение данных\nCalls <code>U::from(self)</code>.\nСоздание новой структуры\nЗамена сообщения\nФильтрация сообщений с …\nЗадача перенаправления …\nЗадача перенаправления …\nЗамена сообщения\nФункция изменения сообщения\nReturns the argument unchanged.\nReturns the argument unchanged.\nВходящий поток сообщений\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nИсходящий поток сообщений\nЗапуск на выполнение\nФильтрация сообщений с …\nReturns the argument unchanged.\nReturns the argument unchanged.\nВходящие сообщения\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nИсходящие сообщения\nЗапуск на выполнение\nЗадача перенаправления …\nИсходящие сообщения, шина …\nReturns the argument unchanged.\nReturns the argument unchanged.\nВходящие сообщения\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nЗапуск на выполнение\nЗадача перенаправления …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nВходящий поток сообщений из …\nИсходящий поток сообщений\nЗапуск на выполнение\nАналого-цифровой …\nДатчик давления BMP180\nКол-во измерений для …\nЧасы реального времени DS3231\nПрямое подключение\nПин отключен\nОбщее устройство\nnumber of samples = 4\nКонфигурации устройств по шине …\nАдрес подчиненного устройства\nПин в режиме входа\nЧерез мультиплексор\nПин в режиме выхода\nРасширение GPIO PCA9555\nРасширение GPIO PCF8575\nРежим работы пина\nКоммуникация с модулем PM-DI16\nКоммуникация с модулем PM-RQ8\nКоммуникация с LED-экраном\nnumber of samples = 2\nnumber of samples = 8\nnumber of samples = 1\nКоммуникация с АЦП ADS11xx\nПодключение часов реального …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nОбщий slave I2C\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nДрайвер работы с чипом PCA9555\nКоммуникация с модулем часов …\nКоммуникация с модулем PM-DI16\nКоммуникация с модулем PM-RQ8\nСериализация / десериализация, …\nКоммуникация с LED-экраном\nАдрес. Зависит от подключения …\nАдрес. По-умолчанию 0x77\nАдрес. По-умолчанию 0x68\nАдрес. По-умолчанию 0x20\nАдрес\nФункция преобразования …\nФункция преобразования данных …\nФункция преобразования данных …\nПериод чтения данных с часов\nНастройка входов\nКол-во измерений для …\nНастройка пина P00\nНастройка пина P01\nНастройка пина P02\nНастройка пина P03\nНастройка пина P04\nНастройка пина P05\nНастройка пина P06\nНастройка пина P07\nНастройка пина P10\nНастройка пина P11\nНастройка пина P12\nНастройка пина P13\nНастройка пина P14\nНастройка пина P15\nНастройка пина P16\nНастройка пина P17\nКанал на мультиплексоре. 0..7\nАдрес мультиплексора\nАдрес подчиненного устройства\nАдрес подчиненного устройства\nПреобразование входящих …\nПреобразование входных …\nТипы данных для конфигурации …\nДиапазон измерения. Задает …\nAINp = AIN0 and AINn = AIN1\nAINp = AIN0 and AINn = AIN3\nAINp = AIN1 and AINn = AIN3\nAINp = AIN2 and AINn = AIN3\nКонфигурация входного значения\nВыбор входа для измерения\nAINp = AIN0 and AINn = GND\nAINp = AIN1 and AINn = GND\nAINp = AIN2 and AINn = GND\nAINp = AIN3 and AINn = GND\n±0.256V\n±0.512V\n±1.024V\n±2.048V\n±4.096V\n±6.144V\nДиапазон измерения\nПреобразование конфигурации в …\nФункция преобразования …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nМаксимальное значение …\nВыбор входа для измерения\nПериодичность вызова\nЧасы реального времени\nСтруктура входных данных для …\nСтруктура выходных данных\nАдрес. По-умолчанию 0x68\nДень\nДень\nФункция преобразования …\nФункция преобразования данных …\nПериод чтения данных с часов\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nЧас\nЧас\nВнутренняя шина сообщений\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nМинуты\nМинуты\nМесяц\nМесяц\nСекунды\nСекунды\nЗапустить опрос датчика\nГод\nГод\nКонфигурация\nУстройство I2C\nФункция преобразования …\nФункция преобразования данных …\nАдрес\nКонфигурация\nДрайвер I2C\nФункция преобразования …\nФункция преобразования данных …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nВнутренняя шина сообщений\nЗапуск на выполнение\nТайм-аут запроса\nОпрос модуля PCA9555\nАдрес микросхемы\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nЗапустить опрос устройства\nНастройка модулуля …\nМодуль PM-RQ8\nАдрес модуля\nКонфигурация\nДрайвер I2C\nФункция преобразования …\nФункция преобразования …\nФункция преобразования …\nФункция преобразования …\nФункция преобразования …\nФункция преобразования …\nФункция преобразования …\nФункция преобразования …\nФункция преобразования …\nФункция преобразования …\nФункция преобразования …\nФункция преобразования …\nФункция преобразования …\nФункция преобразования …\nФункция преобразования …\nФункция преобразования …\nПериод чтения входов\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nВнутренняя шина сообщений\nЗапустить на выполнение\nБуфер данных коммуникации с …\nНастройка модулуля …\nМодуль PM-RQ8\nАдрес модуля\nКонфигурация\nДрайвер I2C\nФункция преобразования …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nВнутренняя шина сообщений\nСостояние выхода 0\nСостояние выхода 1\nСостояние выхода 2\nСостояние выхода 3\nСостояние выхода 4\nСостояние выхода 5\nСостояние выхода 6\nСостояние выхода 7\nЗапустить на выполнение\nДлина сообщения\nДесериализация данных из …\nДесериализация данных из …\nДесериализация данных из …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nСериализация данных в формат …\nСериализация данных в формат …\nСериализация данных в формат …\nКоммуникация с LED-экраном\nЗапустить rоммуникацию с …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nКеш сообщений\nПодключение компонента к …\nComponent input error\nComponent output error\nТип возвращаемого значения …\nПредставление обобщенного …\nОшибки исполненителя …\nЗапуск коллекции компонентов в …\nНастройка исполнителя\nContains the error value\nComponent execution error\nТрейт основной функции …\nComponent initialization error\nContains the success value\nДобавить компонент (?Send)\nБлокировка кеша для чтения в …\nРазмер буфера канала сообщения\nСсылка на кэш TODO - проверить, …\nОчистить кеш\nКлонировать и присвоить новый …\nЗадержка публикации сообщений\nФункция фильтрации сообщений в …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nВставить сообщение в кеш\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nДобавить задачу в множество …\nВозвращает максимальный размер …\nСоздание компонента\nСоздание коллекции компонентов\nСоздаем новый пустой кеш\nСоздание подключения к …\nОсновная функция компонента\nБлокировка кеша для чтения\nВозвращает копию сообщений из …\nВозвращает сообщение из кеша по …\nПолучение сообщений со входа\nОтправка сообщений на выход\nОтправка исходящих сообщений, в …\nНазвание сервиса\nWaits until <code>duration</code> has elapsed.\nЗапустить на выполнение все …\nБлокировка кеша для записи\nEMQX\nGo2Rtc\nGrafana\nInfluxDB (v2)\nLoki\nPortainer\nRedis\nRust\nSentryshot\nSurrealdb\nSystemD\nTimescaleDB\nОшибки логгирования\nКонфигурация логгирования для …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nАдминистрирование\nРоли для доступа в системе\nПользовательские сообщения\nMessage deserialization error\nA <strong>data structure</strong> that can be deserialized from any data …\nЗапретить кеширование\nЗаданное время\nConverts strings to enum variants based on their name.\nОшибки работы с сообщениями\nПример канала сообщения\nПолный доступ\nТрейт для канала сообщений\nБез ограничения\nСообщение\nТолько просмотр\nТип сообщения\nОграничения на данные, которые …\nСтруктура для представления …\nБез ограничений\nУправление\nВыходной канал - по умолчанию …\nФизическая величина\nMessage serialization error\nA <strong>data structure</strong> that can be serialized into any data …\nОграничения для перечисления …\nСистемные сообщения\nПеречисление, содержащее …\nЗначение ограничения времени …\nМетка времени\nДобавить запись пути\nДобавить запись пути\nПроверяем, что в трейсе …\nОпределяет, есть ли в пути …\nДанные\nРазрешенные маршруты сообщения\nРазрешенные маршруты сообщения\nЗадать ограничение времени …\nЗадать ограничение времени …\nЗадать ограничение времени …\nDeserialize this value from the given Serde deserializer.\nДесериализация одного …\nДесериализация массива …\nПока эти модули не нужны, в …\nПример реализации сообщения. …\nПример реализации перечисления …\nПреобразовать в строку с …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nСоздать новый уникальный …\nВозвращает данные сообщения, …\nВозвращает все идентификаторы …\nЧасы\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nВозвращает false, если время жизни …\nРазрешен ли марштур данного …\nКлюч\nМакрос для упрощения создания …\nМинуты\nСоздать новое сообщение\nЗадать безразмероное значение\nСоздать новое сообщение типа …\nЗадать длину в [м]\nЗадать давление в [Па]\nЗадать температуру в [℃]\nПолучить давление в [Па]\nПолучить давление в [мм рт …\nТип физической величины\nSerialize this value into the given Serde serializer.\nСериализация сообщений в json\nСериализация полей данных …\nСериализация сообщений в json\nВозращает название сервиса, в …\nУстанавливает название …\nТипы системных сообщений\nПолучить температуру в [℃]\nВозвращает время Unix с …\nReturns an RFC 3339 and ISO 8601 date and time string such …\nПреобразование в строку\nПреобразование в строку\nПуть, по котором передавалось …\nВозвращает строку для …\nВозвращает строку для …\nМетка времени\nОбновить время жизни сообщения\nДанные, которые не удалось …\nТекст ошибки\nТип аггрегации\nКоличество\nТекущее значение, к которому не …\nПредставление значения …\nПервое\nИнкремент\nМаксимум\nСреднее\nМинимум\nString\nСумма\nТип сохраняемого значения\nЗначение <code>Value</code> было получено с …\nТипы аггрегации, которые должны …\nМетка времени, к которой …\n<code>Attribute</code>\nbool\n<code>Entity</code>\nf64\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nМетка времени\nu64\n<code>Value</code>\nПример реализации сообщения. …\nВложенная группа\nВложенная группа\nЗначение типа f64 в структуре\nВложенная в группу структура\nЗначение типа unit\nESP - кнопка BOOT\nESP - выход на реле\nПример типовой структуры\nПример структуры\nМгновенное значение типа bool\nМгновенное значение типа f64\nМгновенное значение типа String\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nПоле 1\nПоле 2\nПример перечисления сервисов\nПример сервиса\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nЗапрос авторизации по логину и …\nЗапрос авторизации по логину и …\nЗапрос авторизации по токену\nЗапрос авторизации по токену\nОтказ в авторизации\nОтказ в авторизации\nПодтверждение авторизации\nПодтверждение авторизации\nДля ESP - wifi подключен\nПроверка связи - запрос …\nПроверка связи - запрос …\nПроверка связи - ответ от …\nПроверка связи - ответ от …\nТипы системных сообщений\nПорядковый номер запроса\nПорядковый номер запроса\nОпределяем сообщения, которые …\nПричина отказа\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nЛогин\nЛогин для входа\nПароль\nРазрешения\nТокен\nСгенерированный токен\nИдентификаторы компонентов, …\nИдентификаторы компонентов, …")