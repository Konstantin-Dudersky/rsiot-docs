searchState.loadedDescShard("rsiot", 0, "Компоненты для построения …\nКомпоненты\nСтруктуры для конфигурации …\nДополнительная документация\nИсполнитель - структура для …\nНастройки логгирования для …\nПредставление сообщений в …\nУтилиты для сериализации / …\nКомпонент для добавления …\nКомпонент для отправки …\nСоздание компонентов, если они …\nКомпонент для создания …\nТестирование документации:\nКомпонент HTTP-клиент\nКомпонент для периодического …\nШаблон компонента\nКомпонент для логгирования …\nКомпонент MQTT-клиента для …\nКомпонент для взаимодействия с …\nЗадачи, которые можно …\nКомпонент cmp_add_input_stream\nНастройки компонента …\nВнешний канал broadcast, на который …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nКомпонент cmp_add_output_stream\nНастройки компонента …\nВнешний канал mpsc, в который …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nКомпонент cmp_create_if_not_exist\nНастройка компонента …\nЗадержка создания сообщений\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nВектор сообщений, которые …\n<code>ToString::to_string</code>, but without panic on OOM.\nКомпонент cmp_derive\nНастройки cmp_derive\nХранение данных для …\nТрейт для запуска …\nОшибки cmp_derive\nTokioSynBroadcast\nTokioTaskJoin\nВектор структур <code>DeriveItem</code>\nОбработка входящих сообщений и …\nФормирование исходящих …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nФункция преобразования\nСтруктура для сохранения …\n<code>ToString::to_string</code>, but without panic on OOM.\nAn owned dynamically typed <code>Future</code> for use in cases where …\nКомпонент cmp_external_fn_process\nНастройки cmp_external_fn_process\nВнешняя функция для выполнения\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nКомпонент cmp_http_client\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nКомпонент cmp_inject_periodic\nКонфигурация cmp_inject_periodic\nФункция для генерирования …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nПериод вызова\nКомпонент cmp_livecounter\nКонфигурация cmp_check_livecounter\nПериод проверки счетчика на …\nФункция для формирования …\nИщем сообщения со значением …\nФункция для формирования …\nReturns the argument unchanged.\nReturns the argument unchanged.\nПериод создания сообщения о …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nКомпонент cmp_logger\nНастройки компонента …\nThe “debug” level.\nThe “error” level.\nThe “info” level.\nDescribes the level of verbosity of a span or event.\nThe “trace” level.\nThe “warn” level.\nReturns the string representation of the <code>Level</code>.\nФункция преобразования …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nУровень логгирования\n<code>ToString::to_string</code>, but without panic on OOM.\nКомпонент cmp_mqtt_client\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nКомпонент cmp_slint\nНастройки компонента cmp_slint\nErrors of cmp_slint\nФункция обработки входящих …\nФункция генерирования …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nПериод фильтрации исходящих …\nСсылка на главное окно\n<code>ToString::to_string</code>, but without panic on OOM.\nЗамена сообщения\nФильтрация сообщений с …\nЗадача фильтрации потока …\nЗапуск задач, общих для всех …\nЗадача перенаправления …\nЗадача перенаправления …\nЗадача перенаправления …\nЗадача перенаправления …\nЗамена сообщения\nФункция изменения сообщения\nReturns the argument unchanged.\nReturns the argument unchanged.\nВходящий поток сообщений\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nИсходящий поток сообщений\nЗапуск на выполнение\n<code>ToString::to_string</code>, but without panic on OOM.\nФильтрация сообщений с …\nReturns the argument unchanged.\nReturns the argument unchanged.\nВходящие сообщения\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nИсходящие сообщения\nЗапуск на выполнение\n<code>ToString::to_string</code>, but without panic on OOM.\nЗадача фильтрации потока …\nReturns the argument unchanged.\nReturns the argument unchanged.\nПоток входящих сообщений\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nПоток исходящих сообщений\nПериодичность отправки …\nЗапуск на выполнение\n<code>ToString::to_string</code>, but without panic on OOM.\nЗапуск задач, общих для всех …\nЁмкость очередей сообщений …\nМассив устройств\nОшибка filter_identical_data\nОшибка master_device\nОшибка mpsc_to_msgbus\nОшибка msgbus_to_broadcast\nОшибка tokio::mpsc::send\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nШина сообщений\nЗапуск задач.\nСсылка на коллекцию задач tokio\nЗадача перенаправления …\nReturns the argument unchanged.\nReturns the argument unchanged.\nВходящие сообщения\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nИсходящие сообщения\nЗапуск на выполнение\n<code>ToString::to_string</code>, but without panic on OOM.\nЗадача перенаправления …\nReturns the argument unchanged.\nReturns the argument unchanged.\nВходящие сообщения\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nИсходящие сообщения, шина …\nЗапуск на выполнение\n<code>ToString::to_string</code>, but without panic on OOM.\nЗадача перенаправления …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nВходящий поток сообщений из …\nИсходящий поток сообщений\nЗапуск на выполнение\n<code>ToString::to_string</code>, but without panic on OOM.\nЗадача перенаправления …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nВходящий поток сообщений из …\nИсходящий поток сообщений\nЗапуск на выполнение\n<code>ToString::to_string</code>, but without panic on OOM.\nКонфигурация http-клиента\nКонфигурация http-клиента\nОбщие данные для компонентов …\nСтруктуры данных для …\nРеализация опроса подчиненных …\nНастройки коммуникации с …\nСтруктуры данных для …\nОбщие структуры данных для …\nОбщие данные для компонентов …\nПараметры компонента http-client\nТрейт для реализации запросов …\nПараметры запроса на основе …\nТип HTTP-запросов\nТрейт для реализации …\nПараметры периодического …\nURL сервера\nПоддержка клонирования\nПоддержка клонирования\nСоздание запроса\nСоздание запроса\nПуть к ресурсу\nПуть к ресурсу\nФункция выдает параметры …\nФункция обработки ошибки ответа\nФункция обработки ошибки ответа\nФункция обработки корректного …\nФункция обработки корректного …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nПолучить периодичность вызова\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nПериодичность вызова\nОбработка ответа\nОбработка ответа\nПараметры запроса\nТип HTTP-запроса\nТип HTTP-запроса\nЗапросы, которые формируются на …\nПериодические запросы\nАлгоритм сериализации / …\nАлгоритм сериализации / …\nАлгоритм сериализации / …\nТаймаут запроса\nКоллбек неуспешного ответа\nКоллбек успешного ответа\nПараметры компонента http-client\nGET method\nПараметры HTTP\nPOST method\nPUT method\nПараметры запроса на основе …\nПараметры периодического …\nURL сервера\nФункция выдает параметры …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nПараметры запроса\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nФункция обработки …\nФункция обработки …\nФункция обработки корректного …\nФункция обработки корректного …\nПериодичность вызова\nЗапросы, которые формируются на …\nПериодические запросы\nАлгоритм сериализации / …\nТаймаут запроса\nBody of request\nBody of request\nEndpoint for connections\nEndpoint for connection\nEndpoint for connection\nТипаж для сообщение, …\nРежим работы SPI\nЗадержка между операциями\nСтруктура отдельного запроса …\nСтруктура отдельного ответа …\nВиды операций\nЗапрос чтения\nЗапрос записи\nЗапрос записи и  чтения. …\nАдрес устройства\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nСоздание запроса. Адрес …\nМассив операций\nДанные, содержащие ответы\nВремя создания запроса.\nВремя создания запроса.\nВид запроса.\nВид запроса.\nЗначение задержки\nКоличество байт для чтения\nКоличество байт для чтения\nДанные для записи\nДанные для записи\nОграничения для буфера данных\nКонфигурация периодических …\nБазовое устройство для опроса …\nТрейт для реализации на …\nContains the error value\nContains the success value\nТип Result\nЗначения в буфере при …\nФункция создания сообщений на …\nПреобразование данных из …\nЗапросы при инициализации …\nОбновление буфера на основе …\nФункция создания запросов на …\nОбновление буфера на основе …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nПериод вызова\nПериодические запросы\nЗапустить опрос\nЗапустить работу\n<code>ToString::to_string</code>, but without panic on OOM.\nКонфигурация cmp_mqtt_client\nКонфигурация настроек …\nКонфигурация настроек подписки …\nПреобразование входящих …\nПреобразование данных от …\nСообщение для передачи по MQTT\nГенератор сообщений MQTT-брокера\nНе публиковать\nНе подписываться\nПубликовать\nПодписаться\nЁмкость клиента.\nИдентификатор клиента MQTT\nДесериализация сообщения от …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nАдрес брокера\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nДанные сообщения\nПорт брокера.\nНастройка публикации данных в …\nТребуется ли сохранение\nСериализация сообщений перед …\nАлгоритм сериализации\nАлгоритм сериализации / …\nНастройка подписки на данные из …\nТопик\nФункция принимает входящие …\nФункция принимает сообщения из …\nТокен\nРежим работы SPI\nЗадержка между операциями\nСтруктура отдельного запроса …\nСтруктура отдельного ответа …\nВиды операций\nЗапрос записи. Вложенные данные …\nЗапрос записи и  чтения. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nСоздание запроса. Адрес …\nМассив операций\nДанные, содержащие ответы\nВремя создания запроса.\nВремя создания запроса.\nВид запроса.\nВид запроса.\nЗначения скорости\nКол-во бит данных\nСтруктура отдельного запроса …\nСтруктура отдельного ответа …\nДобавлять бит четности\nКол-во стоповых бит\nРасчет времени передачи …\nРасчет скорости передачи с …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nВосстановить запрос из буфера …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nСоздание запроса\nСоздание ответа\nДанные для передачи по uart\nОтвет\nПример протокола для связи …\nВремя создания запроса.\nВремя создания запроса.\nПодготовить запрос для …\nПодготовить ответ для передачи …\nПротокол передачи\nПакет для передачи данных по UART\nАдрес устройства\nАдрес устройства\nДанные для передачи\nДесериализация запроса\nДесериализация ответа\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nСоздание протокола\nАлгоритм сериализации / …\nСериализация запроса\nСериализация ответа\n<code>ToString::to_string</code>, but without panic on OOM.\nТипаж для сообщение, …\nПодготовка среды разработки\nПримеры файлов конфигурации …\naarch64-linux-android\naarch64-unknown-linux-gnu\narmv7-linux-androideabi\narmv7-unknown-linux-gnueabihf\ni686-linux-android\nriscv32imc-esp-espidf\nwasm32-unknown-unknown\nx86_64-linux-android\nx86_64-unknown-linux-gnu\nEMQX\nGo2Rtc\nGrafana\nInfluxDB (v2)\nLoki\nPortainer\nRedis\nRust\nSentryshot\nSurrealdb\nSystemD\nTimescaleDB\nКеш сообщений\nПроверка емкости канала\nПодключение компонента к …\nComponent input error\nComponent output error\nТип возвращаемого значения …\nПредставление обобщенного …\nОшибки исполненителя …\nЗапуск коллекции компонентов в …\nНастройка исполнителя\nContains the error value\nComponent execution error\nТрейт основной функции …\nComponent initialization error\nContains the success value\nДобавить компонент\nБлокировка кеша для чтения в …\nРазмер буфера канала сообщения\nСсылка на кэш TODO - проверить, …\nПроверить емкость канала и …\nОчистить кеш\nКлонировать и присвоить новый …\nЗадержка публикации сообщений\nФункция фильтрации сообщений в …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nВставить сообщение в кеш\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nДобавить задачу в множество …\nВозвращает максимальный размер …\nСоздание компонента\nСоздание коллекции компонентов\nСоздаем новый пустой кеш\nСоздание подключения к …\nОсновная функция компонента\nБлокировка кеша для чтения\nВозвращает копию сообщений из …\nВозвращает сообщение из кеша по …\nПолучение сообщений со входа\nОтправка сообщений на выход\nОтправка исходящих сообщений, в …\nWaits until <code>duration</code> has elapsed.\n<code>ToString::to_string</code>, but without panic on OOM.\nЗапустить на выполнение все …\nБлокировка кеша для записи\nОшибки логгирования\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nАдминистрирование\nМожно передавать между всеми …\nРоли для доступа в системе\nПользовательские сообщения\nMessage deserialization error\nA <strong>data structure</strong> that can be deserialized from any data …\nЗапретить кеширование\nЗаданное время\nConverts strings to enum variants based on their name.\nОшибки работы с сообщениями\nПример канала сообщения\nПолный доступ\nТрейт для канала сообщений\nБез ограничения\nСообщение\nТолько просмотр\nТип сообщения\nОграничения на данные, которые …\nТрейт для получения ключа …\nРазрешенный маршрут передачи …\nСтруктура для представления …\nБез ограничений\nСообщение нельзя передавать\nУправление\nВыходной канал - по умолчанию …\nФизическая величина\nMessage serialization error\nA <strong>data structure</strong> that can be serialized into any data …\nМожно передавать из заданного …\nМожно передавать только между …\nМожно передавать только между …\nСистемные сообщения\nЗначение ограничения времени …\nМетка времени\nДобавить запись пути\nДобавить запись пути\nПроверяем, что в трейсе …\nОпределяет, есть ли в пути …\nДанные\nЗадать ограничение времени …\nЗадать ограничение времени …\nЗадать ограничение времени …\nDeserialize this value from the given Serde deserializer.\nДесериализация одного …\nДесериализация массива …\nПолучить безразмерную величину\nПример реализации сообщения. …\nПреобразовать в строку с …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nСоздать новый уникальный …\nВозвращает данные сообщения, …\nВозвращает все идентификаторы …\nЧасы\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nВозвращает false, если время жизни …\nПолучить ключ сообщения\nПолучить ключ сообщения\nКлюч\nМинуты\nСоздать новое сообщение\nЗадать безразмероное значение\nСоздать новое сообщение типа …\nЗадать длину в [м]\nЗадать давление в [Па]\nЗадать температуру в [℃]\nПолучить давление в [Па]\nПолучить давление в [мм рт …\nТип физической величины\nСекунды\nSerialize this value into the given Serde serializer.\nСериализация сообщений в json\nСериализация полей данных …\nСериализация сообщений в json\nТипы системных сообщений\nПолучить температуру в [℃]\nВозвращает время Unix с …\nReturns an RFC 3339 and ISO 8601 date and time string such …\nПреобразование в строку\nПреобразование в строку\nПуть, по котором передавалось …\n<code>ToString::to_string</code>, but without panic on OOM.\nМетка времени\nОбновить время жизни сообщения\nВозвращает номер дня недели. 1 = …\nДанные, которые не удалось …\nТекст ошибки\nПример реализации сообщения. …\nВложенная группа\nВложенная группа\nЗначение типа f64 в структуре\nВложенная в группу структура\nЗначение типа unit\nESP - кнопка BOOT\nESP - выход на реле\nПример структуры\nВложенный кортеж\nМгновенное значение типа bool\nМгновенное значение типа f64\nМгновенное значение типа String\nValueStruct\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nПоле 1\nПоле 2\nЗапрос авторизации по логину и …\nЗапрос авторизации по логину и …\nЗапрос авторизации по токену\nЗапрос авторизации по токену\nОтказ в авторизации\nОтказ в авторизации\nПодтверждение авторизации\nПодтверждение авторизации\nДля ESP - wifi подключен\nПроверка связи - запрос …\nПроверка связи - запрос …\nПроверка связи - ответ от …\nПроверка связи - ответ от …\nТипы системных сообщений\nПорядковый номер запроса\nПорядковый номер запроса\nОпределяем сообщения, которые …\nПричина отказа\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nЛогин\nЛогин для входа\nПароль\nРазрешения\nТокен\nСгенерированный токен\nИдентификаторы компонентов, …\nИдентификаторы компонентов, …\nJSON\nPostcard\nФормат сериализации / …\nTOML\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.")