searchState.loadedDescShard("rsiot", 0, "Компоненты для построения …\nКомпоненты\nСтруктуры для конфигурации …\nДополнительная документация\nЗагрузка переменных среды из ОС …\nИсполнитель - структура для …\nНастройки логгирования для …\nПредставление сообщений в …\nУтилиты для сериализации / …\nКомпонент для добавления …\nКомпонент для отправки …\nКомпонент авторизации …\nСоздание компонентов, если они …\nКомпонент для создания …\nТестирование документации:\nКомпонент для сохранения …\nКомпонент HTTP-клиент\nКомпонент для получения данных …\nКомпонент для взаимодействия с …\nКомпонент для периодического …\nОпрос устройств по интерфейсу SPI\nКоммуникация через интерфейс …\nШаблон компонента\nКомпонент для логгирования …\nКомонент для математической …\nОпрос устройств Modbus, используя …\nКомпонент MQTT-клиента для …\nШаблон компонента\nИсполнение логики работы в …\nКомпонент для подключения к Redis.\nКомпонент для взаимодействия с …\nКомпонент для взаимодействия с …\nКомпонент получает системную …\nОтправка сообщений в телеграм\nКомпонент сохранения данных в …\nКомпонент клиента websocket\nКомпонент для подключения …\nЗадачи, которые можно …\nКомпонент cmp_add_input_stream\nНастройки компонента …\nВнешний канал broadcast, на который …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nКомпонент cmp_add_output_stream\nНастройки компонента …\nВнешний канал mpsc, в который …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nКомпонент cmp_auth\nCmpOutput\nКонфигурация\nТип хранилища данных доступа\nЗапись данных авторизации для …\nОшибки cmp_auth\nHmac error\nJwt error\nЛокальное сохранение - в коде\nProcessRequest\nВ базе данных SurrealDB\nTokioTaskJoinError\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nЛогин\nПароль\nРоль\nСекретный ключ для валидации …\nХранилище данных доступа\n<code>ToString::to_string</code>, but without panic on OOM.\nКомпонент cmp_create_if_not_exist\nНастройка компонента …\nЗадержка создания сообщений\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nВектор сообщений, которые …\n<code>ToString::to_string</code>, but without panic on OOM.\nКомпонент cmp_derive\nНастройки cmp_derive\nХранение данных для …\nТрейт для запуска …\nОшибки cmp_derive\nTokioSynBroadcast\nTokioTaskJoin\nВектор структур <code>DeriveItem</code>\nОбработка входящих сообщений и …\nФормирование исходящих …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nФункция преобразования\nСтруктура для сохранения …\n<code>ToString::to_string</code>, but without panic on OOM.\nAn owned dynamically typed <code>Future</code> for use in cases where …\nКомпонент cmp_external_fn_process\nНастройки cmp_external_fn_process\nВнешняя функция для выполнения\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nКаждый раз при изменении буфера\nОграничения на структуру буфера\nЧастота вызова функции …\nКомпонент cmp_filesystem\nКонфигурация cmp_filesystem\nОдин раз при запуске\nЧастота вызова функции …\nПапка, в которой хранятся файлы\nФункция преобразования …\nФункция преобразования …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nАлгоритм …\n<code>ToString::to_string</code>, but without panic on OOM.\nКомпонент cmp_http_client\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nОшибка Axum\nОшибка привязки к порту\nКомпонент cmp_http_server\nКонфигурация компонента http-server\nReturns the argument unchanged.\nКонфигурация точек GET\nCalls <code>U::from(self)</code>.\nПорт, через который доступен …\nКонфигурация точек PUT\n<code>ToString::to_string</code>, but without panic on OOM.\nКомпонент cmp_influxdb\nКонфигурация cmp_influxdb\nОшибки cmp_influxdb\nБаза данных\nФункция преобразования …\nReturns the argument unchanged.\nПримеры\nCalls <code>U::from(self)</code>.\nПорт базы данных\nПериодичность отправки данных …\n<code>ToString::to_string</code>, but without panic on OOM.\nmessage\nstatus\nКомпонент cmp_inject_periodic\nКонфигурация cmp_inject_periodic\nФункция для генерирования …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nПериод вызова\nКомпонент cmp_linux_spi_master\nКонфигурация cmp_linux_spi_master\nНастройки коммуникации с …\nКонфигурация устройства Linux\nТолько SPI\nSPI + chip select, который управляется …\nЧастота тактов\nДрайвера устройств\nМассив настроек коммуникации с …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nКонфигурация устройства Linux\nРежим работы SPI\n<code>ToString::to_string</code>, but without panic on OOM.\nУстройство SPI, например  “…\nУстройство SPI, например “…\nУстройство SPI, например “…\nНомер линии GPIO. 0 .. 31\nКомпонент cmp_linux_uart_master\nКонфигурация cmp_linux_uart_master\nСкорость сетевого обмена\nКол-во бит данных\nМассив устройств\nReturns the argument unchanged.\nНазвание чипа gpio в системе.\nCalls <code>U::from(self)</code>.\nБит четности\nНомер пина для сигнала RTS (ready to …\nНазвание порта\nКол-во стоповых бит\nВремя ожидания ответа\nКомпонент cmp_livecounter\nКонфигурация cmp_check_livecounter\nПериод проверки счетчика на …\nФункция для формирования …\nИщем сообщения со значением …\nФункция для формирования …\nReturns the argument unchanged.\nReturns the argument unchanged.\nПериод создания сообщения о …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nКомпонент cmp_logger\nНастройки компонента …\nThe “debug” level.\nThe “error” level.\nThe “info” level.\nDescribes the level of verbosity of a span or event.\nThe “trace” level.\nThe “warn” level.\nReturns the string representation of the <code>Level</code>.\nФункция преобразования …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nУровень логгирования\n<code>ToString::to_string</code>, but without panic on OOM.\nПеречень алгоритмов для …\nКомпонент cmp_math\nКонфигурация компонента cmp_math\nТипаж для внутренних сообщений\nВыборка последних значений в …\nПростое скользящее среднее\nАлгоритмы математической …\nПример\nПример\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nКоличество значений\nВходящие сообщения\nВходящие сообщения\nПериод времени, за который …\nИсходящие сообщения\nИсходящие сообщения\nОбмен данными с устройством, …\nМодуль для конвертации …\nКонвертация двух регистров в f32\nКонвертация двух регистров в u32\nКонвертация двух регистров в f32, …\nКонвертация двух регистров в f32, …\nКонвертация двух регистров в f32, …\nКонвертация двух регистров в f32, …\nКонвертация двух регистров в u32, …\nКомпонент cmp_mqtt_client\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nКомпонент CMP_TEMPLATE\nКонфигурация компонента …\nПример\nПример\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nКомпонент cmp_plc\nCmpOutput\nКонфигурация компонента ПЛК\nНастройка сохранения и …\nОшибки cmp_plc\nГлавный функциональный блок ПЛК\nФункция инициализации входной …\nФункция преобразования …\nФункция восстановления …\nФункция преобразования …\nФункция преобразования …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nПериодичность выполнения …\nМодули, связанные с работой plc\nТаймаут восстановления\nНастройки сохранения состояния …\nПериодичность сохранения …\n<code>ToString::to_string</code>, but without panic on OOM.\nСистемные данные …\nФункциональный блок\nТрейт для логики выполнения …\nВызов функционального блока\ntrue - первый вызов …\ntrue - первый вызов …\nReturns the argument unchanged.\nReturns the argument unchanged.\nВходные данные\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nВремя последнего вызова.\nБиблиотека функциональных …\nОсновная логика выполнения …\nСоздание экземпляра …\nПериод вызова блока\nВыходные данные\nСтатичные данные - сохраняются …\nТипы данных в ПЛК\nДвигатели, клапана\nОпределение фронта сигнала\nОбработка событий\nБлок реализации машины …\nТаймеры\nmotor\nПереключение режима\nВыбор уставки из двух …\nmotor\nmotor\nВ ошибке\nmotor\nВходная структура\nКоманда с hmi\nОбласть памяти output\nРазрешения для работы с hmi\nСтатут для вывода на hmi\nСостояние\nОбласть памяти stat\nСтарт\nСтоп\nКоманда на запуск в режиме auto\nКоманда на останов в режиме stop\ntrue - первый вызов …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nКоманда с hmi\nРазрешения для работы с hmi\nСтатус для вывода на hmi\nВходные данные\nfalse - блокировка работы\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nВремя последнего вызова.\nРазрешение включения в ручном …\nЗапуск\nРазрешение отключения в ручном …\nСтоп\nРежим работы\nРежим работы\nПереключение в режим auto из …\nРазрешение переключения в …\nПереключение в режим auto из hmi\nПереключение в режим local из …\nРазрешение переключения в …\nПереключение в режим local из hmi\nПереключение в режим manual из …\nРазрешение переключения в …\nПереключение в режим man из hmi\nПереключение в режим oos из …\nРазрешение переключения в …\nПереключение в режим oos из hmi\nИсточник выбора режима:\nНет команды - по-умолчанию\nВыходные данные\nСтатичные данные - сохраняются …\n1 = команда на запуск двигателя\ntrue - команда на запуск\nСостояние\nКоманда на запуск\nАвтоматический режим\nПереключение режима\nВходная структура\nКоманда с hmi\nМестный\nРучной\nOut of service - выведен из …\nОбласть памяти output\nРазрешения для работы с hmi\nСтатут для вывода на hmi\nРежим работы\nОбласть памяти stat\ntrue - первый вызов …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nКоманда с hmi\nРазрешения для работы с hmi\nСтатус для вывода на hmi\nВходные данные\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nВремя последнего вызова.\nРежим работы\nРежим работы\nрежим работы\nПереключение в режим auto из …\nРазрешение переключения в …\nПереключение в режим auto из hmi\nПереключение в режим local из …\nРазрешение переключения в …\nПереключение в режим local из hmi\nПереключение в режим manual из …\nРазрешение переключения в …\nПереключение в режим man из hmi\nПереключение в режим oos из …\nРазрешение переключения в …\nПереключение в режим oos из hmi\nИсточник выбора режима:\nНет команды - по-умолчанию\nВыходные данные\nСтатичные данные - сохраняются …\nmotor\nВходная структура\nКоманда с hmi\nОбласть памяти output\nРазрешения для работы с hmi\nСтатут для вывода на hmi\nОбласть памяти stat\ntrue - первый вызов …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nКоманда с hmi\nРазрешения для работы с hmi\nСтатус для вывода на hmi\nВходные данные\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nВремя последнего вызова.\nНет команды\nВыходные данные\nСтатичные данные - сохраняются …\nЗадание\nЗадание\nВыбор источника команд выбора (…\nИзменение значения sp\nЗадание из hmi\nЗадание из hmi\nАктивно задание из hmi\nАктивно задание из hmi\nАктивировать задание из hmi\nАктивировать задание из hmi\nАктивировать задание из hmi\nАктивация любого задания: …\nЗадание из plc\nАктивно задание из plc\nАктивно задание из plc\nАктивно задание из plc\nАктивировать задание из plc\nАктивировать задание из plc\nАктивировать задание из plc\nВ ошибке\nЗакрыт\nЗакрытие\nmotor\nВходная структура\nКоманда с hmi\nОткрыт\nОткрытие\nОбласть памяти output\nРазрешения для работы с hmi\nСтатут для вывода на hmi\nСостояние\nОбласть памяти stat\nКоманда на закрытие в …\nКоманда на открытие в …\nКоманда на управление\ntrue - команда на управление\nКоманда на запуск\ntrue - первый вызов …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nКоманда с hmi\nРазрешения для работы с hmi\nСтатус для вывода на hmi\nВходные данные\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nВремя последнего вызова.\nЗакрыть в ручном режиме из hmi\nОткрыть в ручном режиме из hmi\nРазрешение включения в ручном …\nРазрешение отключения в ручном …\nРежим работы\nРежим работы\nПереключение в режим auto из …\nРазрешение переключения в …\nПереключение в режим auto из hmi\nПереключение в режим local из …\nРазрешение переключения в …\nПереключение в режим local из hmi\nПереключение в режим manual из …\nРазрешение переключения в …\nПереключение в режим man из hmi\nПереключение в режим oos из …\nРазрешение переключения в …\nПереключение в режим oos из hmi\nИсточник выбора режима:\nНет команды - по-умолчанию\nВыходные данные\nСтатичные данные - сохраняются …\nСостояние\nВ ошибке\nЗакрыт\nЗакрытие\nmotor\nВходная структура\nКоманда с hmi\nОткрыт\nОткрытие\nОбласть памяти output\nРазрешения для работы с hmi\nСтатут для вывода на hmi\nСостояние\nОбласть памяти stat\ntrue - первый вызов …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nКоманда с hmi\nРазрешения для работы с hmi\nСтатус для вывода на hmi\nВходные данные\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nВремя последнего вызова.\nРазрешение включения в ручном …\nРазрешение отключения в ручном …\nРежим работы\nРежим работы\nПереключение в режим auto из …\nРазрешение переключения в …\nПереключение в режим auto из hmi\nПереключение в режим local из …\nРазрешение переключения в …\nПереключение в режим local из hmi\nПереключение в режим manual из …\nРазрешение переключения в …\nПереключение в режим man из hmi\nПереключение в режим oos из …\nРазрешение переключения в …\nПереключение в режим oos из hmi\nИсточник выбора режима:\nЗадание\nЗадание\nЗадание открытия\nВыбор источника команд выбора (…\nИзменение значения sp\nЗадание из hmi\nАктивно задание из hmi\nАктивно задание из hmi\nАктивировать задание из hmi\nАктивировать задание из hmi\nАктивировать задание из hmi\nАктивация любого задания: …\nЗадание из plc\nАктивно задание из plc\nАктивно задание из plc\nАктивировать задание из plc\nАктивировать задание из plc\nАктивировать задание из plc\nНет команды - по-умолчанию\nВыходные данные\nФактическое открытие\nФактическое открытие\nСтатичные данные - сохраняются …\nСостояние\nКоманда на запуск\nФронт сигнала 0 -&gt; 1\nФронт сигнала 0 -&gt; 1\nВходные данные\nВыходные данные\nСтатичные данные\ntrue - первый вызов …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nВходные данные\nСигнал, фронт которого нужно …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nВремя последнего вызова.\nВыходные данные\nУстанавливается в true на один …\nСтатичные данные - сохраняются …\nУровень события\nСобрать аварии\nОпределить макс. уровень из …\nФункциональный блок события\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nmotor\nВходная структура\nКоманда с hmi\nНет команды - по-умолчанию\nОбласть памяти output\nСтатут для вывода на hmi\nОбласть памяти stat\nСтатусы аварий\ntrue - первый вызов …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nКоманда с hmi\nСтатус для вывода на hmi\nВходные данные\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nВремя последнего вызова.\nВыходные данные\nСтатичные данные - сохраняются …\nКвитирование сообщения из Hmi\nКвитирование всех сообщений\nАктивно, квитировано\nАктивно, неквитировано\nmotor\nВходная структура\nКоманда с hmi\nНеактивно, квитировано\nНеактивно, неквитировано\nНет команды - по-умолчанию\nОбласть памяти output\nСостояние для HMI\nОбласть памяти stat\nСостояние сообщения\nУровень события\nУровень события\ntrue - первый вызов …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nКоманда с hmi\nСтатус для вывода на hmi\nВходные данные\nИдентификатор события\nИдентификатор события\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nВремя последнего вызова.\nВыходные данные\nСтатичные данные - сохраняются …\nСигнал наступления события\nСостояние события\nСостояние события\nСостояние сообщения\nТекст события\nТекст события\nБлок реализации машины …\nВходная структура\nОбласть памяти output\nОбласть памяти stat\nТекущее состояние\nТекущее состояние\ntrue - первый вызов …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nВходные данные\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nПервое выполнение в новом цикле\nВремя последнего вызова.\nНовое состояние\nВыходные данные\nСтатичные данные - сохраняются …\nВремя нахождения в состоянии\nВремя нахождения в состоянии\nТаймер TON\nТаймер TP\nТаймер TON\nВходные данные\nВыходные данные\nСтатичные данные\nВремя работы таймера\ntrue - первый вызов …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nВходные данные\nВходной сигнал для контроля\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nВремя последнего вызова.\nУстанавливается в true, когда …\nЗадание времени\nВыходные данные\nСтатичные данные - сохраняются …\nТаймер TON\nВходные данные\nВыходные данные\nСтатичные данные\nВремя работы таймера\ntrue - первый вызов …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nВходные данные\nВходной сигнал для контроля\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nВремя последнего вызова.\nУстанавливается в true, когда …\nЗадание времени\nВыходные данные\nСтатичные данные - сохраняются …\nСтруктура данных, которая …\nПромежуток времени\nМетка времени\nReturns the argument unchanged.\nПолучение данных\nCalls <code>U::from(self)</code>.\nСоздание новой структуры\nКомпонент cmp_redis_client\nКомпонент cmp_slint\nНастройки компонента cmp_slint\nErrors of cmp_slint\nФункция обработки входящих …\nФункция генерирования …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nПериод фильтрации исходящих …\nСсылка на главное окно\n<code>ToString::to_string</code>, but without panic on OOM.\nКомпонент cmp_surrealdb\nКонфигурация cmp_surrealdb\nОшибки cmp_surrealdb\nКонфигурация запросов, которые …\nКонфигурация запросов, которые …\nSurrealDB\nTokioTaskJoin\nrsiot\nФункция формирования запроса …\nФункция вызывается при ошибке …\nФункция вызывается при ошибке …\nФункция вызывается при успешно …\nФункция вызывается при успешно …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nlocalhost\nСкрипт для инициализации\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nrsiot\nroot\n8000\nФункция формирования запроса …\nКонфигурация запросов на …\nКонфигурация запросов, …\n<code>ToString::to_string</code>, but without panic on OOM.\nroot\nНевозможно определить данные\nКомпонент cmp_system_info\nКонфигурация cmp_system_info\nОшибки cmp_system_info\nСистемная информация\nИнформация о диске\nИнформация о потребленной …\nИнформация о сетевом …\nReturns CPU’s usage.\nИнформация о дисках\nФункция создания исходящих …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the system hostname based off DNS.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMAC address for network interface\nИнформация о памяти\nName of network interface\nНазвание\nИнформация о сетевых …\nReturns the system long os version (e.g “MacOS 11.2 …\nПериод обновления данных\nTemperature of components\nДоступный размер оперативной …\nОбщее пространство, [GB]\nОбщий размер swap, [MB]\n<code>ToString::to_string</code>, but without panic on OOM.\nИспользуемый размер …\nЗанятое пространство, [GB]\nИспользуемый размер swap, [MB]\nНазвание поля\nКомпонент cmp_telegram\nКонфигурация cmp_telegram\nТокен бота\nИдентификатор чата, в который …\nПример\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nПредставление аггрегации в БД\nКомпонент cmp_timescaledb\nКонфигурация Timescaledb\nКоличество значений в интервале\nАктуальное значение\nПервое значение в интервале\nПриращение значения в интервале\nМаксимальное значение в …\nСреднее значение в интервале\nМинимальное значение в …\nМодель строки в БД\nСумма значений в интервале\nАггрегация, с помощью которой …\nМассив следующих аггрегаций\nМетка времени аггрегации\nАтрибут\nСтрока подключения к БД\nСущность\nФункция преобразования …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nМаксимальное количество …\nСоздать строку в таблице, …\nМетка времени\nЗначение\nКомпонент cmp_websocket_client\nНастройки Websocket-клиента\nПреобразование входящих …\nФункция создает исходящее …\nПреобразование полученного от …\nАлгоритм сериализации / …\nАдрес Websocket-сервера “ws://localhost:9001…\nКомпонент cmp_websocker_server\nКонфигурация Websocket-сервера\nФункция перечисления, …\nФункция преобразования …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nПорт, через который доступен …\nАлгоритм сериализации и …\n<code>ToString::to_string</code>, but without panic on OOM.\nЗамена сообщения\nЗапуск общих задач компонентов …\nФильтрация сообщений с …\nЗадача фильтрации потока …\nЗапуск задач, общих для всех …\nЗадача перенаправления …\nЗадача перенаправления …\nЗадача перенаправления …\nЗадача перенаправления …\nЗамена сообщения\nФункция изменения сообщения\nReturns the argument unchanged.\nReturns the argument unchanged.\nВходящий поток сообщений\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nИсходящий поток сообщений\nЗапуск на выполнение\n<code>ToString::to_string</code>, but without panic on OOM.\nЗадача контроля соединения\nContains the error value\nContains the success value\nТип Result с заданным типом ошибки\nЗапуск задач, общих для всех …\nЁмкость очередей сообщений …\nКанал для передачи состояния …\nПреобразование входящих …\nПреобразование состояния в …\nПреобразование полученного от …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nКанал получения состояния …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nШина сообщений\nШина сообщений\nАлгоритм сериализации / …\nЗапуск на выполнение\nЗапуск задач.\nСсылка на коллекцию задач tokio\n<code>ToString::to_string</code>, but without panic on OOM.\nФильтрация сообщений с …\nReturns the argument unchanged.\nReturns the argument unchanged.\nВходящие сообщения\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nИсходящие сообщения\nЗапуск на выполнение\n<code>ToString::to_string</code>, but without panic on OOM.\nЗадача фильтрации потока …\nReturns the argument unchanged.\nReturns the argument unchanged.\nПоток входящих сообщений\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nПоток исходящих сообщений\nПериодичность отправки …\nЗапуск на выполнение\n<code>ToString::to_string</code>, but without panic on OOM.\nЗапуск задач, общих для всех …\nЁмкость очередей сообщений …\nМассив устройств\nОшибка filter_identical_data\nОшибка master_device\nОшибка mpsc_to_msgbus\nОшибка msgbus_to_broadcast\nОшибка tokio::mpsc::send\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nШина сообщений\nЗапуск задач.\nСсылка на коллекцию задач tokio\nЗадача перенаправления …\nReturns the argument unchanged.\nReturns the argument unchanged.\nВходящие сообщения\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nИсходящие сообщения\nЗапуск на выполнение\n<code>ToString::to_string</code>, but without panic on OOM.\nЗадача перенаправления …\nReturns the argument unchanged.\nReturns the argument unchanged.\nВходящие сообщения\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nИсходящие сообщения, шина …\nЗапуск на выполнение\n<code>ToString::to_string</code>, but without panic on OOM.\nЗадача перенаправления …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nВходящий поток сообщений из …\nИсходящий поток сообщений\nЗапуск на выполнение\n<code>ToString::to_string</code>, but without panic on OOM.\nЗадача перенаправления …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nВходящий поток сообщений из …\nИсходящий поток сообщений\nЗапуск на выполнение\n<code>ToString::to_string</code>, but without panic on OOM.\nКонфигурация http-клиента\nКонфигурация http-клиента\nОбщие данные для компонентов …\nКонфигурация HTTP-сервера\nСтруктуры данных для …\nКонфигурация клиента InfluxDB\nКонфигурация клиента InfluxDB\nРеализация опроса подчиненных …\nСтруктуры данных для работы …\nНастройки коммуникации с …\nКонфигурация Redis-клиента\nСтруктуры данных для …\nОбщие структуры данных для …\nКонфигурация UART-мастера\nОбщие данные для websocket-клиентов\nОбщие данные для компонентов …\nКонфигурация Websocket-сервера\nПараметры компонента http-client\nТрейт для реализации запросов …\nПараметры запроса на основе …\nТип HTTP-запросов\nТрейт для реализации …\nПараметры периодического …\nURL сервера\nПоддержка клонирования\nПоддержка клонирования\nСоздание запроса\nСоздание запроса\nПуть к ресурсу\nПуть к ресурсу\nФункция выдает параметры …\nФункция обработки ошибки ответа\nФункция обработки ошибки ответа\nФункция обработки корректного …\nФункция обработки корректного …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nПолучить периодичность вызова\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nПериодичность вызова\nОбработка ответа\nОбработка ответа\nПараметры запроса\nТип HTTP-запроса\nТип HTTP-запроса\nЗапросы, которые формируются на …\nПериодические запросы\nАлгоритм сериализации / …\nАлгоритм сериализации / …\nАлгоритм сериализации / …\nТаймаут запроса\nКоллбек неуспешного ответа\nКоллбек успешного ответа\nПараметры компонента http-client\nGET method\nПараметры HTTP\nPOST method\nPUT method\nПараметры запроса на основе …\nПараметры периодического …\nURL сервера\nФункция выдает параметры …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nПараметры запроса\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nФункция обработки …\nФункция обработки …\nФункция обработки корректного …\nФункция обработки корректного …\nПериодичность вызова\nЗапросы, которые формируются на …\nПериодические запросы\nАлгоритм сериализации / …\nТаймаут запроса\nBody of request\nBody of request\nEndpoint for connections\nEndpoint for connection\nEndpoint for connection\nТипаж для сообщение, …\n<code>application/json</code> content-type\nКонфигурация компонента http-server\nТип содержимого HTTP-ответа\nТрейт для обеспечения логики …\nКонфигурация отдельной точки GET\nКоллекция точек GET\nТрейт для обеспечения логики …\nКонфигурация отдельной точки PUT\nКоллекция точек PUT\n<code>text/html</code> content-type\n<code>text/plain; charset=utf-8</code> content-type\nМассив всех путей GET\nМассив всех путей PUT\nПоддержка клонирования\nПоддержка клонирования\nОбновление данных на основе …\nОбновление данных на основе …\nФункция обновления данных на …\nСоздание исходящих сообщений …\nФункция создания исходящих …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nКонфигурация точек GET\nПолучить путь для роутера\nПолучить путь для роутера\nОбработка GET запроса\nОбработка PUT запроса\nВывод перечня доступных точек\nИнформация о точках GET для <code>/info</code>\nИнформация о точках PUT для <code>/info</code>\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nСоздать коллекцию точек GET на …\nСоздать коллекцию точек PUT на …\nПуть\nПуть\nПорт, через который доступен …\nКонфигурация точек PUT\nАлгоритм сериализации / …\nАлгоритм сериализации / …\nСериализация данных\nДанные для точки GET\nРежим работы SPI\nЗадержка между операциями\nСтруктура отдельного запроса …\nСтруктура отдельного ответа …\nВиды операций\nЗапрос чтения\nЗапрос записи\nЗапрос записи и  чтения. …\nАдрес устройства\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nСоздание запроса. Адрес …\nМассив операций\nДанные, содержащие ответы\nВремя создания запроса.\nВремя создания запроса.\nВид запроса.\nВид запроса.\nЗначение задержки\nКоличество байт для чтения\nКоличество байт для чтения\nДанные для записи\nДанные для записи\nКонфигурация cmp_influxdb\nЗначение в словаре <code>fields</code>\nСтрока записи в данных в базу …\nБаза данных\nСловать Поле = Значение поля\nФункция преобразования …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nПримеры\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nНовая строка записи\nПорт базы данных\nПериодичность отправки данных …\nTable\nСловать Тег = Значение тега\nПреобразование в строку, для …\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nМетка времени\nКонфигурация cmp_influxdb\nСтрока записи в данных в базу …\nBucket\nФункция преобразования …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nПримеры\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nmeasurement\nНовая строка записи\nОгранизация\nПорт базы данных\nТокен\n<code>ToString::to_string</code>, but without panic on OOM.\nМетка времени\nvalue\nОграничения для буфера данных\nКонфигурация периодических …\nБазовое устройство для опроса …\nТрейт для реализации на …\nContains the error value\nContains the success value\nТип Result\nЗначения в буфере при …\nФункция создания сообщений на …\nПреобразование данных из …\nЗапросы при инициализации …\nОбновление буфера на основе …\nФункция создания запросов на …\nОбновление буфера на основе …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nПериод вызова\nПериодические запросы\nЗапустить опрос\nЗапустить работу\n<code>ToString::to_string</code>, but without panic on OOM.\nМассив бит\nКонфигурация Modbus клиента\nКонфигурация cmp_modbus_client\nНастройки коммуникации с …\nСтруктура отдельного запроса …\nСтруктура отдельного ответа …\nЧтение регистров флагов\nЧтение регистров хранения\nЧтение регистров ввода\nПараметры запроса Modbus\nОтвет от устройства\nВариант для Modbus RTU\nВариант для Modbus TCP\nБез ответа\nМассив слов\nЗапись одного регистра хранения\nНастройки подключения к …\nДопустимое кол-во …\nДрайвера устройств\nМассив настроек коммуникации с …\ntrue - разрешение работы\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nСоздать ответ из запроса\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nСоздание запроса. Адрес …\nМассив операций\nВремя создания запроса.\nВремя создания запроса.\nВид запроса.\nВид запроса.\nДанные, содержащие ответы\nТаймаут\nАдрес подчиненного устройства …\nIP-адрес устройства\nПорт устройства (обычно 502)\nАдрес\nКоличество\nКоличество\nКоличество\nНачальный адрес\nНачальный адрес\nНачальный адрес\nЗначение\nКонфигурация cmp_mqtt_client\nКонфигурация настроек …\nКонфигурация настроек подписки …\nПреобразование входящих …\nПреобразование данных от …\nСообщение для передачи по MQTT\nГенератор сообщений MQTT-брокера\nНе публиковать\nНе подписываться\nПубликовать\nПодписаться\nЁмкость клиента.\nИдентификатор клиента MQTT\nДесериализация сообщения от …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nАдрес брокера\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nДанные сообщения\nПорт брокера.\nНастройка публикации данных в …\nТребуется ли сохранение\nСериализация сообщений перед …\nАлгоритм сериализации\nАлгоритм сериализации / …\nНастройка подписки на данные из …\nТопик\nФункция принимает входящие …\nФункция принимает сообщения из …\nТокен\nКонфигурация cmp_redis_client\nСтруктура с информацией для …\nКанал Pub/Sub, в котором …\nФункция преобразования …\nФункция преобразования данных …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nКлюч для сохранения в кеше Redis\nНазвание канала для подписки …\nАдрес сервера Redis\nЗначение для сохранения - само …\nРежим работы SPI\nЗадержка между операциями\nСтруктура отдельного запроса …\nСтруктура отдельного ответа …\nВиды операций\nЗапрос записи. Вложенные данные …\nЗапрос записи и  чтения. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nСоздание запроса. Адрес …\nМассив операций\nДанные, содержащие ответы\nВремя создания запроса.\nВремя создания запроса.\nВид запроса.\nВид запроса.\nЗначения скорости\nКол-во бит данных\nСтруктура отдельного запроса …\nСтруктура отдельного ответа …\nДобавлять бит четности\nКол-во стоповых бит\nРасчет времени передачи …\nРасчет скорости передачи с …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nВосстановить запрос из буфера …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nСоздание запроса\nСоздание ответа\nДанные для передачи по uart\nОтвет\nПример протокола для связи …\nВремя создания запроса.\nВремя создания запроса.\nПодготовить запрос для …\nПодготовить ответ для передачи …\nПротокол передачи\nПакет для передачи данных по UART\nАдрес устройства\nАдрес устройства\nДанные для передачи\nДесериализация запроса\nДесериализация ответа\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nСоздание протокола\nАлгоритм сериализации / …\nСериализация запроса\nСериализация ответа\n<code>ToString::to_string</code>, but without panic on OOM.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nНастройки Websocket-клиента\nПреобразование входящих …\nПреобразование полученного от …\nПреобразование входящих …\nФункция создает исходящее …\nПреобразование полученного от …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nАлгоритм сериализации / …\nАдрес Websocket-сервера “ws://localhost:9001…\nТипаж для сообщение, …\nКонфигурация Websocket-сервера\nФункция преобразования …\nФункция перечисления, …\nФункция перечисления, …\nФункция преобразования …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nПорт, через который доступен …\nАлгоритм сериализации и …\nПодготовка среды разработки\nПримеры файлов конфигурации …\naarch64-linux-android\naarch64-unknown-linux-gnu\narmv7-linux-androideabi\narmv7-unknown-linux-gnueabihf\ni686-linux-android\nriscv32imc-esp-espidf\nwasm32-unknown-unknown\nx86_64-linux-android\nx86_64-unknown-linux-gnu\nEMQX\nGo2Rtc\nGrafana\nInfluxDB (v2)\nLoki\nPortainer\nRedis\nRust\nSentryshot\nSurrealdb\nSystemD\nTimescaleDB\nОшибки модуля работы с …\nТрейт, который должна …\nIoError\nLoadFromEnvironment\nLoadFromFile\nSerializeError\nToUppercase\nЗапускаем CLI\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nЗагрузить настройки\n<code>ToString::to_string</code>, but without panic on OOM.\nКеш сообщений\nПроверка емкости канала\nПодключение компонента к …\nComponent input error\nComponent output error\nТип возвращаемого значения …\nПредставление обобщенного …\nОшибки исполненителя …\nЗапуск коллекции компонентов в …\nНастройка исполнителя\nContains the error value\nComponent execution error\nТрейт основной функции …\nComponent initialization error\nContains the success value\nДобавить компонент\nБлокировка кеша для чтения в …\nРазмер буфера канала сообщения\nСсылка на кэш TODO - проверить, …\nПроверить емкость канала и …\nОчистить кеш\nКлонировать и присвоить новый …\nЗадержка публикации сообщений\nФункция фильтрации сообщений в …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nВставить сообщение в кеш\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nДобавить задачу в множество …\nВозвращает максимальный размер …\nСоздание компонента\nСоздание коллекции компонентов\nСоздаем новый пустой кеш\nСоздание подключения к …\nОсновная функция компонента\nБлокировка кеша для чтения\nВозвращает копию сообщений из …\nВозвращает сообщение из кеша по …\nПолучение сообщений со входа\nОтправка сообщений на выход\nОтправка исходящих сообщений, в …\nWaits until <code>duration</code> has elapsed.\n<code>ToString::to_string</code>, but without panic on OOM.\nЗапустить на выполнение все …\nБлокировка кеша для записи\nОшибки логгирования\nLoki error\nParse error\nНастройка логгирования\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nАдминистрирование\nМожно передавать между всеми …\nРоли для доступа в системе\nПользовательские сообщения\nMessage deserialization error\nA <strong>data structure</strong> that can be deserialized from any data …\nЗапретить кеширование\nЗаданное время\nConverts strings to enum variants based on their name.\nОшибки работы с сообщениями\nПример канала сообщения\nПолный доступ\nТрейт для канала сообщений\nБез ограничения\nСообщение\nТолько просмотр\nТип сообщения\nОграничения на данные, которые …\nТрейт для получения ключа …\nРазрешенный маршрут передачи …\nСтруктура для представления …\nБез ограничений\nСообщение нельзя передавать\nУправление\nВыходной канал - по умолчанию …\nФизическая величина\nMessage serialization error\nA <strong>data structure</strong> that can be serialized into any data …\nМожно передавать из заданного …\nМожно передавать только между …\nМожно передавать только между …\nСистемные сообщения\nЗначение ограничения времени …\nМетка времени\nДобавить запись пути\nДобавить запись пути\nПроверяем, что в трейсе …\nОпределяет, есть ли в пути …\nДанные\nЗадать ограничение времени …\nЗадать ограничение времени …\nЗадать ограничение времени …\nDeserialize this value from the given Serde deserializer.\nДесериализация одного …\nДесериализация массива …\nПолучить безразмерную величину\nПример реализации сообщения. …\nПреобразовать в строку с …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nСоздать новый уникальный …\nВозвращает данные сообщения, …\nВозвращает все идентификаторы …\nЧасы\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nВозвращает false, если время жизни …\nПолучить ключ сообщения\nПолучить ключ сообщения\nКлюч\nМинуты\nСоздать новое сообщение\nЗадать безразмероное значение\nСоздать новое сообщение типа …\nЗадать длину в [м]\nЗадать давление в [Па]\nЗадать температуру в [℃]\nПолучить давление в [Па]\nПолучить давление в [мм рт …\nТип физической величины\nСекунды\nSerialize this value into the given Serde serializer.\nСериализация сообщений в json\nСериализация полей данных …\nСериализация сообщений в json\nТипы системных сообщений\nПолучить температуру в [℃]\nВозвращает время Unix с …\nReturns an RFC 3339 and ISO 8601 date and time string such …\nПреобразование в строку\nПреобразование в строку\nПуть, по котором передавалось …\n<code>ToString::to_string</code>, but without panic on OOM.\nМетка времени\nОбновить время жизни сообщения\nВозвращает номер дня недели. 1 = …\nДанные, которые не удалось …\nТекст ошибки\nПример реализации сообщения. …\nВложенная группа\nВложенная группа\nЗначение типа f64 в структуре\nВложенная в группу структура\nЗначение типа unit\nESP - кнопка BOOT\nESP - выход на реле\nПример структуры\nВложенный кортеж\nМгновенное значение типа bool\nМгновенное значение типа f64\nМгновенное значение типа String\nValueStruct\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nПоле 1\nПоле 2\nЗапрос авторизации по логину и …\nЗапрос авторизации по логину и …\nЗапрос авторизации по токену\nЗапрос авторизации по токену\nОтказ в авторизации\nОтказ в авторизации\nПодтверждение авторизации\nПодтверждение авторизации\nДля ESP - wifi подключен\nПроверка связи - запрос …\nПроверка связи - запрос …\nПроверка связи - ответ от …\nПроверка связи - ответ от …\nТипы системных сообщений\nПорядковый номер запроса\nПорядковый номер запроса\nОпределяем сообщения, которые …\nПричина отказа\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nЛогин\nЛогин для входа\nПароль\nРазрешения\nТокен\nСгенерированный токен\nИдентификаторы компонентов, …\nИдентификаторы компонентов, …\nJSON\nPostcard\nФормат сериализации / …\nTOML\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.")